{"version":3,"file":"Analytics-cCEyD58D.js","sources":["../../src/views/analytics/Analytics.vue"],"sourcesContent":["<template>\n  <div class=\"p-6\">\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-bold text-gray-900\">Analytics</h1>\n      <p class=\"text-gray-600\">System performance and model insights</p>\n    </div>\n\n    <!-- Performance Metrics Overview -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      <StatCard\n        label=\"Average Accuracy\"\n        :value=\"averageAccuracy\"\n        icon=\"chart-bar\"\n        :color=\"getScoreColor(averageAccuracyValue)\"\n        :loading=\"isLoading\"\n      />\n      <StatCard\n        label=\"Average F1-Score\"\n        :value=\"averageF1Score\"\n        icon=\"chart-bar\"\n        :color=\"getScoreColor(averageF1ScoreValue)\"\n        :loading=\"isLoading\"\n      />\n      <StatCard\n        label=\"Best Model Accuracy\"\n        :value=\"bestAccuracy\"\n        icon=\"trophy\"\n        color=\"success\"\n        :loading=\"isLoading\"\n      />\n      <StatCard\n        label=\"Total Trained Models\"\n        :value=\"trainedModelsCount.toString()\"\n        icon=\"cpu\"\n        color=\"primary\"\n        :loading=\"isLoading\"\n      />\n    </div>\n\n    <!-- Charts Grid -->\n    <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-8 mb-8\">\n      <!-- Model Performance Comparison -->\n      <ChartCard\n        title=\"Model Performance Comparison\"\n        :loading=\"isLoading\"\n      >\n        <RadarChart\n          :data=\"performanceComparisonData\"\n          :options=\"radarOptions\"\n          :height=\"400\"\n        />\n      </ChartCard>\n\n      <!-- Accuracy vs F1-Score Scatter -->\n      <ChartCard\n        title=\"Accuracy vs F1-Score\"\n        :loading=\"isLoading\"\n      >\n        <canvas ref=\"scatterChart\" height=\"400\"></canvas>\n      </ChartCard>\n    </div>\n\n    <!-- Confusion Matrix Section -->\n    <div class=\"mb-8\">\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header mb-6\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">Confusion Matrix Analysis</h3>\n          <p class=\"text-sm text-gray-600 mt-1\">\n            Select a model to view its confusion matrix\n          </p>\n        </div>\n\n        <!-- Model Selector -->\n        <div class=\"mb-6\">\n          <label for=\"model-select\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Select Model:\n          </label>\n          <select\n            id=\"model-select\"\n            v-model=\"selectedModelId\"\n            class=\"form-select w-full max-w-md\"\n            :disabled=\"trainedModels.length === 0\"\n          >\n            <option value=\"\">\n              {{ trainedModels.length === 0 ? 'No trained models available' : 'Select a model...' }}\n            </option>\n            <option\n              v-for=\"model in trainedModels\"\n              :key=\"model.id\"\n              :value=\"model.id\"\n            >\n              {{ model.name }} ({{ model.f1_score ? (model.f1_score * 100).toFixed(1) : '0.0' }}% F1)\n            </option>\n          </select>\n        </div>\n\n        <!-- Confusion Matrix -->\n        <div v-if=\"selectedModel && selectedModel.confusion_matrix\">\n          <ConfusionMatrix\n            :matrix=\"selectedModel.confusion_matrix\"\n            :labels=\"confusionMatrixLabels\"\n            :title=\"`${selectedModel.name} - Confusion Matrix`\"\n          />\n        </div>\n        \n        <div v-else-if=\"selectedModelId && selectedModel\" class=\"text-center py-8 text-gray-500\">\n          <Icon name=\"chart-bar\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p>No confusion matrix data available for this model</p>\n        </div>\n        \n        <div v-else-if=\"trainedModels.length === 0\" class=\"text-center py-8 text-gray-500\">\n          <Icon name=\"cpu\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p>No trained models available</p>\n          <RouterLink to=\"/models/create\" class=\"text-primary-600 hover:text-primary-700 text-sm\">\n            Create your first model â†’\n          </RouterLink>\n        </div>\n        \n        <div v-else class=\"text-center py-8 text-gray-500\">\n          <Icon name=\"chart-bar\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p>Select a model above to view its confusion matrix</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Quick Actions -->\n    <div class=\"flex justify-center space-x-4\">\n      <RouterLink to=\"/analytics/comparison\" class=\"btn-primary\">\n        <Icon name=\"chart-bar\" class=\"w-4 h-4 mr-2\" />\n        Model Comparison\n      </RouterLink>\n      <RouterLink to=\"/models\" class=\"btn-secondary\">\n        <Icon name=\"cpu\" class=\"w-4 h-4 mr-2\" />\n        View All Models\n      </RouterLink>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { storeToRefs } from 'pinia'\nimport Icon from '@/components/ui/Icon.vue'\nimport StatCard from '@/components/ui/StatCard.vue'\nimport ChartCard from '@/components/charts/ChartCard.vue'\nimport RadarChart from '@/components/charts/RadarChart.vue'\nimport ConfusionMatrix from '@/components/charts/ConfusionMatrix.vue'\nimport { useModelStore } from '@/stores/models'\n// Types imported through stores\n\n// Store\nconst modelStore = useModelStore()\nconst { models } = storeToRefs(modelStore)\n\n// State\nconst isLoading = ref(false)\nconst selectedModelId = ref<string>('')\n\n// Computed\nconst trainedModels = computed(() => {\n  return models.value?.filter(m => m.status === 'trained' && m.is_trained) || []\n})\n\nconst selectedModel = computed(() => {\n  if (!selectedModelId.value) return null\n  return trainedModels.value.find(m => m.id.toString() === selectedModelId.value) || null\n})\n\nconst trainedModelsCount = computed(() => trainedModels.value.length)\n\nconst averageAccuracyValue = computed(() => {\n  if (trainedModels.value.length === 0) return 0\n  return trainedModels.value.reduce((sum, m) => sum + (m.accuracy || 0), 0) / trainedModels.value.length\n})\n\nconst averageAccuracy = computed(() => {\n  if (trainedModels.value.length === 0) return 'N/A'\n  return `${(averageAccuracyValue.value * 100).toFixed(1)}%`\n})\n\nconst averageF1ScoreValue = computed(() => {\n  if (trainedModels.value.length === 0) return 0\n  return trainedModels.value.reduce((sum, m) => sum + (m.f1_score || 0), 0) / trainedModels.value.length\n})\n\nconst averageF1Score = computed(() => {\n  if (trainedModels.value.length === 0) return 'N/A'\n  return `${(averageF1ScoreValue.value * 100).toFixed(1)}%`\n})\n\nconst bestAccuracy = computed(() => {\n  if (trainedModels.value.length === 0) return 'N/A'\n  const best = Math.max(...trainedModels.value.map(m => m.accuracy || 0))\n  return `${(best * 100).toFixed(1)}%`\n})\n\nconst performanceComparisonData = computed(() => {\n  if (trainedModels.value.length === 0) {\n    return {\n      labels: ['Accuracy', 'F1 Score', 'Precision', 'Recall'],\n      datasets: []\n    }\n  }\n\n  const colors = [\n    'rgba(59, 130, 246, 0.2)', // blue\n    'rgba(16, 185, 129, 0.2)', // green\n    'rgba(245, 158, 11, 0.2)', // yellow\n    'rgba(239, 68, 68, 0.2)', // red\n    'rgba(139, 92, 246, 0.2)'  // purple\n  ]\n\n  const borderColors = [\n    'rgba(59, 130, 246, 1)',\n    'rgba(16, 185, 129, 1)',\n    'rgba(245, 158, 11, 1)',\n    'rgba(239, 68, 68, 1)',\n    'rgba(139, 92, 246, 1)'\n  ]\n\n  return {\n    labels: ['Accuracy', 'F1 Score', 'Precision', 'Recall'],\n    datasets: trainedModels.value.slice(0, 5).map((model, index) => ({\n      label: model.name,\n      data: [\n        (model.accuracy || 0) * 100,\n        (model.f1_score || 0) * 100,\n        (model.precision || 0) * 100,\n        (model.recall || 0) * 100\n      ],\n      backgroundColor: colors[index % colors.length],\n      borderColor: borderColors[index % borderColors.length],\n      pointBackgroundColor: borderColors[index % borderColors.length]\n    }))\n  }\n})\n\nconst confusionMatrixLabels = computed(() => {\n  // For medical domain classification, these would typically be the domain names\n  // For now, we'll use generic labels that can be customized based on the actual domains\n  if (!selectedModel.value || !selectedModel.value.confusion_matrix) return []\n  \n  const matrixSize = selectedModel.value.confusion_matrix.length\n  return Array.from({ length: matrixSize }, (_, i) => `Class ${i + 1}`)\n})\n\nconst radarOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    r: {\n      beginAtZero: true,\n      max: 100,\n      ticks: {\n        stepSize: 20\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      position: 'bottom' as const\n    }\n  }\n}\n\n// Methods\nconst getScoreColor = (score: number) => {\n  if (score >= 0.8) return 'success'\n  if (score >= 0.6) return 'warning'\n  return 'error'\n}\n\nconst refreshData = async () => {\n  isLoading.value = true\n  try {\n    await modelStore.fetchModels()\n  } catch (error) {\n    console.error('Failed to fetch models:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Auto-select best model when models are loaded\nwatch(trainedModels, (newModels) => {\n  if (newModels.length > 0 && !selectedModelId.value) {\n    // Select the model with highest F1 score\n    const bestModel = newModels.reduce((best, current) => {\n      const bestScore = best.f1_score || best.accuracy || 0\n      const currentScore = current.f1_score || current.accuracy || 0\n      return currentScore > bestScore ? current : best\n    })\n    selectedModelId.value = bestModel.id.toString()\n  }\n}, { immediate: true })\n\n// Lifecycle\nonMounted(async () => {\n  await refreshData()\n})\n</script>\n"],"names":["modelStore","useModelStore","models","storeToRefs","isLoading","ref","selectedModelId","trainedModels","computed","m","selectedModel","trainedModelsCount","averageAccuracyValue","sum","averageAccuracy","averageF1ScoreValue","averageF1Score","bestAccuracy","performanceComparisonData","colors","borderColors","model","index","confusionMatrixLabels","matrixSize","_","i","radarOptions","getScoreColor","score","refreshData","error","watch","newModels","bestModel","best","current","bestScore","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","StatCard","_hoisted_3","ChartCard","RadarChart","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$event","_hoisted_9","_toDisplayString","_Fragment","_renderList","_hoisted_10","_hoisted_11","ConfusionMatrix","_hoisted_12","Icon","_cache","_hoisted_13","_component_RouterLink","_hoisted_14","_hoisted_15"],"mappings":"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"}