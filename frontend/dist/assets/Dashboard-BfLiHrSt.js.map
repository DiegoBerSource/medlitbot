{"version":3,"file":"Dashboard-BfLiHrSt.js","sources":["../../src/components/training/TrainingProgressCard.vue","../../src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"medical-card\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h4 class=\"font-medium text-gray-900\">Model Training #{{ trainingJob.model }}</h4>\n      <span \n        class=\"status-badge\"\n        :class=\"{\n          'status-badge-success': trainingJob.status === 'completed',\n          'status-badge-warning': trainingJob.status === 'running',\n          'status-badge-error': trainingJob.status === 'failed'\n        }\"\n      >\n        {{ trainingJob.status }}\n      </span>\n    </div>\n    \n    <div class=\"space-y-3\">\n      <div class=\"flex justify-between text-sm\">\n        <span>Progress</span>\n        <span>{{ Math.round(trainingJob.progress_percentage) }}%</span>\n      </div>\n      \n      <div class=\"progress-bar\">\n        <div \n          class=\"progress-bar-fill\"\n          :style=\"{ width: trainingJob.progress_percentage + '%' }\"\n        />\n      </div>\n      \n      <div class=\"grid grid-cols-2 gap-4 text-sm text-gray-600\">\n        <div>Epoch: {{ trainingJob.current_epoch }}/{{ trainingJob.total_epochs }}</div>\n        <div v-if=\"trainingJob.current_loss\">Loss: {{ trainingJob.current_loss.toFixed(4) }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TrainingJob } from '@/types'\n\ninterface Props {\n  trainingJob: TrainingJob\n}\n\ndefineProps<Props>()\n</script>\n","<template>\n  <div class=\"p-6\">\n    <!-- Page Header -->\n    <div class=\"mb-8\">\n      <div class=\"flex items-center justify-between\">\n        <div>\n          <h1 class=\"text-3xl font-bold text-gray-900\">\n            Welcome to MedLitBot\n          </h1>\n          <p class=\"mt-2 text-gray-600\">\n            AI-powered medical literature classification dashboard\n          </p>\n        </div>\n        \n        <div class=\"flex items-center space-x-4\">\n          <!-- Quick Actions -->\n          <div class=\"flex space-x-2\">\n            <button\n              v-for=\"action in quickActions\"\n              :key=\"action.name\"\n              @click=\"router.push(action.route)\"\n              class=\"btn-primary flex items-center space-x-2\"\n              :title=\"action.description\"\n            >\n              <Icon :name=\"action.icon\" class=\"w-4 h-4\" />\n              <span class=\"hidden sm:inline\">{{ action.name }}</span>\n            </button>\n          </div>\n          \n          <!-- Refresh Button -->\n          <button\n            @click=\"refreshData\"\n            :disabled=\"isLoading\"\n            class=\"btn-secondary flex items-center space-x-2\"\n          >\n            <Icon \n              name=\"refresh\" \n              class=\"w-4 h-4\"\n              :class=\"{ 'animate-spin': isLoading }\"\n            />\n            <span class=\"hidden sm:inline\">Refresh</span>\n          </button>\n        </div>\n      </div>\n      \n      <!-- System Status -->\n      <div class=\"mt-4 flex items-center space-x-4\">\n        <div class=\"flex items-center space-x-2\">\n          <div \n            class=\"w-3 h-3 rounded-full\"\n            :class=\"isOnline ? 'bg-green-400' : 'bg-red-400'\"\n          />\n          <span class=\"text-sm text-gray-600\">\n            {{ isOnline ? 'Online' : 'Offline' }}\n          </span>\n        </div>\n        \n        <div class=\"flex items-center space-x-2\">\n          <div class=\"w-3 h-3 rounded-full bg-green-400\" />\n          <span class=\"text-sm text-gray-600\">\n            API Connected\n          </span>\n        </div>\n        \n        <div class=\"text-sm text-gray-500\">\n          Last updated: {{ lastUpdatedFormatted }}\n        </div>\n      </div>\n    </div>\n    \n    <!-- Statistics Cards -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      <StatCard\n        v-for=\"stat in statistics\"\n        :key=\"stat.label\"\n        :label=\"stat.label\"\n        :value=\"stat.value\"\n        :icon=\"stat.icon\"\n        :color=\"stat.color\"\n        :trend=\"stat.trend\"\n        :loading=\"isLoading\"\n      />\n    </div>\n    \n    <!-- Charts Row -->\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n      <!-- Dataset Overview Chart -->\n      <ChartCard\n        title=\"Dataset Overview\"\n        :loading=\"isLoading\"\n      >\n        <DoughnutChart\n          :data=\"datasetChartData\"\n          :options=\"chartOptions.dataset\"\n          :height=\"300\"\n        />\n      </ChartCard>\n      \n      <!-- Model Performance Chart -->\n      <ChartCard\n        title=\"Model Performance\"\n        :loading=\"isLoading\"\n      >\n        <RadarChart\n          :data=\"modelPerformanceData\"\n          :options=\"chartOptions.performance\"\n          :height=\"300\"\n        />\n      </ChartCard>\n    </div>\n    \n    <!-- Recent Activity and Data Tables -->\n    <div class=\"grid grid-cols-1 xl:grid-cols-3 gap-8\">\n      <!-- Recent Datasets -->\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <div class=\"flex items-center justify-between\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">\n              Recent Datasets\n            </h3>\n            <RouterLink\n              to=\"/datasets\"\n              class=\"text-primary-600 hover:text-primary-700 text-sm font-medium\"\n            >\n              View all →\n            </RouterLink>\n          </div>\n        </div>\n        \n        <div class=\"space-y-3\">\n          <div\n            v-for=\"dataset in recentDatasets\"\n            :key=\"dataset.id\"\n            class=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n          >\n            <div class=\"flex-1\">\n              <h4 class=\"font-medium text-gray-900 truncate\">\n                {{ dataset.name }}\n              </h4>\n              <p class=\"text-sm text-gray-500\">\n                {{ dataset.total_samples }} samples\n              </p>\n            </div>\n            \n            <div class=\"flex items-center space-x-2\">\n              <span\n                class=\"status-badge\"\n                :class=\"dataset.is_validated ? 'status-badge-success' : 'status-badge-warning'\"\n              >\n                {{ dataset.is_validated ? 'Validated' : 'Pending' }}\n              </span>\n            </div>\n          </div>\n          \n          <div\n            v-if=\"recentDatasets.length === 0 && !isLoading\"\n            class=\"text-center py-8 text-gray-500\"\n          >\n            <Icon name=\"database\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>No datasets yet</p>\n            <RouterLink to=\"/datasets/create\" class=\"text-primary-600 hover:text-primary-700 text-sm\">\n              Create your first dataset →\n            </RouterLink>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Recent Models -->\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <div class=\"flex items-center justify-between\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">\n              ML Models\n            </h3>\n            <RouterLink\n              to=\"/models\"\n              class=\"text-primary-600 hover:text-primary-700 text-sm font-medium\"\n            >\n              View all →\n            </RouterLink>\n          </div>\n        </div>\n        \n        <div class=\"space-y-3\">\n          <div\n            v-for=\"model in recentModels\"\n            :key=\"model.id\"\n            class=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n          >\n            <div class=\"flex-1\">\n              <h4 class=\"font-medium text-gray-900 truncate\">\n                {{ model.name }}\n              </h4>\n              <p class=\"text-sm text-gray-500\">\n                {{ formatModelType(model.model_type) }}\n                {{ model.f1_score ? `• F1: ${(model.f1_score * 100).toFixed(1)}%` : '' }}\n              </p>\n            </div>\n            \n            <div class=\"flex items-center space-x-2\">\n              <span\n                class=\"status-badge\"\n                :class=\"{\n                  'status-badge-success': model.status === 'trained',\n                  'status-badge-warning': model.status === 'training',\n                  'status-badge-error': model.status === 'failed',\n                  'status-badge-info': model.status === 'created'\n                }\"\n              >\n                {{ model.status }}\n              </span>\n            </div>\n          </div>\n          \n          <div\n            v-if=\"recentModels.length === 0 && !isLoading\"\n            class=\"text-center py-8 text-gray-500\"\n          >\n            <Icon name=\"cpu\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>No models yet</p>\n            <RouterLink to=\"/models/create\" class=\"text-primary-600 hover:text-primary-700 text-sm\">\n              Create your first model →\n            </RouterLink>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Recent Classifications -->\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <div class=\"flex items-center justify-between\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">\n              Recent Classifications\n            </h3>\n            <RouterLink\n              to=\"/classification/history\"\n              class=\"text-primary-600 hover:text-primary-700 text-sm font-medium\"\n            >\n              View all →\n            </RouterLink>\n          </div>\n        </div>\n        \n        <div class=\"space-y-3\">\n          <div\n            v-for=\"prediction in recentPredictions\"\n            :key=\"prediction.id\"\n            class=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\"\n          >\n            <div class=\"flex-1\">\n              <h4 class=\"font-medium text-gray-900 text-sm line-clamp-2\">\n                {{ prediction.title }}\n              </h4>\n              <div class=\"mt-2 flex flex-wrap gap-1\">\n                <span\n                  v-for=\"domain in prediction.predicted_domains.slice(0, 2)\"\n                  :key=\"domain\"\n                  class=\"domain-badge\"\n                >\n                  {{ domain }}\n                </span>\n                <span\n                  v-if=\"prediction.predicted_domains.length > 2\"\n                  class=\"text-xs text-gray-500\"\n                >\n                  +{{ prediction.predicted_domains.length - 2 }} more\n                </span>\n              </div>\n              <p class=\"text-xs text-gray-500 mt-1\">\n                {{ formatRelativeTime(prediction.created_at) }}\n              </p>\n            </div>\n          </div>\n          \n          <div\n            v-if=\"recentPredictions.length === 0 && !isLoading\"\n            class=\"text-center py-8 text-gray-500\"\n          >\n            <Icon name=\"brain\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>No classifications yet</p>\n            <RouterLink to=\"/classification\" class=\"text-primary-600 hover:text-primary-700 text-sm\">\n              Start classifying →\n            </RouterLink>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Training Progress (if any active) -->\n    <div\n      v-if=\"activeTrainingJobs.length > 0\"\n      class=\"mt-8\"\n    >\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">\n            Active Training Jobs\n          </h3>\n        </div>\n        \n        <div class=\"space-y-4\">\n          <TrainingProgressCard\n            v-for=\"job in activeTrainingJobs\"\n            :key=\"job.id\"\n            :training-job=\"job\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useOnline } from '@vueuse/core'\nimport { formatDistanceToNow } from 'date-fns'\n\n// Import components\nimport StatCard from '@/components/ui/StatCard.vue'\nimport ChartCard from '@/components/charts/ChartCard.vue'\nimport DoughnutChart from '@/components/charts/DoughnutChart.vue'\nimport RadarChart from '@/components/charts/RadarChart.vue'\nimport TrainingProgressCard from '@/components/training/TrainingProgressCard.vue'\nimport Icon from '@/components/ui/Icon.vue'\n\n// Import stores\nimport { useDatasetStore } from '@/stores/datasets'\nimport { useModelStore } from '@/stores/models'\nimport { useClassificationStore } from '@/stores/classification'\nimport { useTrainingStore } from '@/stores/training'\nimport { useSystemStore } from '@/stores/system'\n\n// Import types (not needed as we use stores directly)\n\n// Setup\nconst router = useRouter()\n\n// Stores\nconst datasetStore = useDatasetStore()\nconst modelStore = useModelStore()\nconst classificationStore = useClassificationStore()\nconst trainingStore = useTrainingStore()\nconst systemStore = useSystemStore()\n\n// Reactive state\nconst isLoading = ref(false)\nconst lastUpdated = ref<Date>(new Date())\n\n// Online status\nconst isOnline = useOnline()\n\n// Quick actions\nconst quickActions = [\n  {\n    name: 'New Dataset',\n    route: '/datasets/create',\n    icon: 'plus',\n    description: 'Upload medical literature dataset'\n  },\n  {\n    name: 'Train Model',\n    route: '/models/create',\n    icon: 'academic-cap',\n    description: 'Create and train AI model'\n  },\n  {\n    name: 'Classify',\n    route: '/classification',\n    icon: 'document-text',\n    description: 'Classify medical articles'\n  }\n]\n\n// Computed properties\nconst lastUpdatedFormatted = computed(() => {\n  return formatDistanceToNow(lastUpdated.value, { addSuffix: true })\n})\n\nconst recentDatasets = computed(() => {\n  return datasetStore.datasets ? datasetStore.datasets.slice(0, 5) : []\n})\n\nconst recentModels = computed(() => {\n  return modelStore.models ? modelStore.models.slice(0, 5) : []\n})\n\nconst recentPredictions = computed(() => {\n  return classificationStore.predictions ? classificationStore.predictions.slice(0, 5) : []\n})\n\nconst activeTrainingJobs = computed(() => {\n  return trainingStore.activeJobs || []\n})\n\nconst statistics = computed(() => [\n  {\n    label: 'Total Datasets',\n    value: systemStore.stats.total_datasets,\n    icon: 'database',\n    color: 'primary',\n    trend: (systemStore.stats.total_datasets > 0 ? 'up' : null) as 'up' | 'down' | null\n  },\n  {\n    label: 'Trained Models',\n    value: systemStore.stats.total_models,\n    icon: 'cpu',\n    color: 'medical',\n    trend: (systemStore.stats.total_models > 0 ? 'up' : null) as 'up' | 'down' | null\n  },\n  {\n    label: 'Classifications',\n    value: systemStore.stats.total_predictions,\n    icon: 'brain',\n    color: 'success',\n    trend: (systemStore.stats.total_predictions > 0 ? 'up' : null) as 'up' | 'down' | null\n  },\n  {\n    label: 'Active Training',\n    value: systemStore.stats.active_training_jobs,\n    icon: 'clock',\n    color: systemStore.stats.active_training_jobs > 0 ? 'warning' : 'info',\n    trend: (systemStore.stats.active_training_jobs > 0 ? 'up' : null) as 'up' | 'down' | null\n  }\n])\n\nconst datasetChartData = computed(() => ({\n  labels: ['Validated', 'Pending', 'In Review'],\n  datasets: [{\n    data: [\n      systemStore.stats.validated_datasets || 0,\n      (systemStore.stats.total_datasets || 0) - (systemStore.stats.validated_datasets || 0),\n      0\n    ],\n    backgroundColor: [\n      '#10B981', // success-500\n      '#F59E0B', // warning-500\n      '#6B7280'  // gray-500\n    ]\n  }]\n}))\n\nconst modelPerformanceData = computed(() => {\n  const trainedModels = modelStore.models?.filter(m => m.status === 'trained' && m.is_trained) || []\n  \n  if (trainedModels.length === 0) {\n    return {\n      labels: ['Accuracy', 'F1 Score', 'Precision', 'Recall'],\n      datasets: [{\n        label: 'No trained models',\n        data: [0, 0, 0, 0],\n        backgroundColor: 'rgba(156, 163, 175, 0.2)',\n        borderColor: 'rgba(156, 163, 175, 1)',\n        pointBackgroundColor: 'rgba(156, 163, 175, 1)'\n      }]\n    }\n  }\n\n  // Calculate averages of all trained models\n  const avgAccuracy = trainedModels.reduce((sum, m) => sum + (m.accuracy || 0), 0) / trainedModels.length * 100\n  const avgF1Score = trainedModels.reduce((sum, m) => sum + (m.f1_score || 0), 0) / trainedModels.length * 100\n  const avgPrecision = trainedModels.reduce((sum, m) => sum + (m.precision || 0), 0) / trainedModels.length * 100\n  const avgRecall = trainedModels.reduce((sum, m) => sum + (m.recall || 0), 0) / trainedModels.length * 100\n\n  return {\n    labels: ['Accuracy', 'F1 Score', 'Precision', 'Recall'],\n    datasets: [{\n      label: `Average Performance (${trainedModels.length} models)`,\n      data: [avgAccuracy, avgF1Score, avgPrecision, avgRecall],\n      backgroundColor: 'rgba(59, 130, 246, 0.2)',\n      borderColor: 'rgba(59, 130, 246, 1)',\n      pointBackgroundColor: 'rgba(59, 130, 246, 1)'\n    }]\n  }\n})\n\nconst chartOptions = {\n  dataset: {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom' as const\n      }\n    }\n  },\n  performance: {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      r: {\n        beginAtZero: true,\n        max: 100,\n        ticks: {\n          stepSize: 20\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom' as const\n      }\n    }\n  }\n}\n\n// Methods\nconst refreshData = async () => {\n  isLoading.value = true\n  \n  try {\n    await Promise.all([\n      datasetStore.fetchDatasets(),\n      modelStore.fetchModels(),\n      classificationStore.fetchPredictions(),\n      trainingStore.fetchActiveJobs(),\n      systemStore.fetchStats()\n    ])\n    \n    lastUpdated.value = new Date()\n  } catch (error) {\n    console.error('Failed to refresh data:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst formatRelativeTime = (dateString: string) => {\n  return formatDistanceToNow(new Date(dateString), { addSuffix: true })\n}\n\nconst formatModelType = (type: string): string => {\n  const typeMap: Record<string, string> = {\n    bert: 'BERT',\n    biobert: 'BioBERT',\n    clinicalbert: 'ClinicalBERT',\n    scibert: 'SciBERT',\n    pubmedbert: 'PubMedBERT',\n    'gemma2-2b': 'Gemma 2B',\n    traditional: 'Traditional ML',\n    hybrid: 'Hybrid',\n    custom: 'Custom'\n  }\n  return typeMap[type] || type.toUpperCase()\n}\n\n// Lifecycle\nonMounted(async () => {\n  await refreshData()\n  \n  // Set up auto-refresh every 30 seconds\n  setInterval(() => {\n    if (isOnline.value) {\n      refreshData()\n    }\n  }, 30000)\n})\n</script>\n\n<style scoped>\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","trainingJob","_hoisted_4","_hoisted_5","_cache","_hoisted_6","_normalizeStyle","_hoisted_7","router","useRouter","datasetStore","useDatasetStore","modelStore","useModelStore","classificationStore","useClassificationStore","trainingStore","useTrainingStore","systemStore","useSystemStore","isLoading","ref","lastUpdated","isOnline","useOnline","quickActions","lastUpdatedFormatted","computed","formatDistanceToNow","recentDatasets","recentModels","recentPredictions","activeTrainingJobs","statistics","datasetChartData","modelPerformanceData","trainedModels","m","avgAccuracy","sum","avgF1Score","avgPrecision","avgRecall","chartOptions","refreshData","error","formatRelativeTime","dateString","formatModelType","type","onMounted","_Fragment","_renderList","action","_unref","_createVNode","Icon","_normalizeClass","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","stat","_createBlock","StatCard","_hoisted_14","ChartCard","DoughnutChart","RadarChart","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_component_RouterLink","_hoisted_19","dataset","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","model","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","prediction","_hoisted_38","_hoisted_39","_hoisted_40","domain","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","job","TrainingProgressCard"],"mappings":"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"}