{"version":3,"file":"ClassificationBatch-CXjy_87j.js","sources":["../../src/views/classification/ClassificationBatch.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 max-w-6xl mx-auto\">\n    <!-- Header -->\n    <div class=\"mb-8\">\n      <h1 class=\"text-3xl font-bold text-gray-900\">Batch Classification</h1>\n      <p class=\"mt-2 text-gray-600\">Classify multiple medical literature articles at once</p>\n    </div>\n\n    <!-- Model Selection -->\n    <div class=\"medical-card mb-8\">\n      <div class=\"medical-card-header\">\n        <h2 class=\"text-xl font-semibold text-gray-900\">Select Classification Model</h2>\n        <p class=\"text-sm text-gray-600\">Choose a trained model for batch processing</p>\n      </div>\n\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label for=\"model\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Trained Model *\n          </label>\n          <select\n            id=\"model\"\n            v-model=\"selectedModelId\"\n            required\n            class=\"input-field\"\n            :class=\"{ 'border-red-500': !selectedModelId && attempted }\"\n            @change=\"onModelChange\"\n          >\n            <option value=\"\">Select a trained model</option>\n            <option\n              v-for=\"model in trainedModels\"\n              :key=\"model.id\"\n              :value=\"model.id\"\n            >\n              {{ model.name }}{{ bestModel && model.id === bestModel.id ? ' ‚≠ê (Best)' : '' }} - \n              {{ model.f1_score ? `F1: ${(model.f1_score * 100).toFixed(1)}%` : model.accuracy ? `Acc: ${(model.accuracy * 100).toFixed(1)}%` : 'Training' }}\n            </option>\n          </select>\n          <p v-if=\"!selectedModelId && attempted\" class=\"mt-1 text-sm text-red-600\">\n            Please select a model for classification\n          </p>\n        </div>\n\n        <!-- Enhanced Model Info -->\n        <div v-if=\"selectedModel\" class=\"p-4 bg-gradient-from-blue-50 to-gray-50 rounded-lg border border-blue-200\">\n          <div class=\"flex items-center justify-between mb-3\">\n            <h3 class=\"font-semibold text-gray-900 flex items-center\">\n              <Icon name=\"check-circle\" class=\"w-4 h-4 text-green-500 mr-2\" v-if=\"bestModel && selectedModel.id === bestModel.id\" />\n              {{ selectedModel.name }}\n              <span v-if=\"bestModel && selectedModel.id === bestModel.id\" class=\"ml-2 px-2 py-0.5 bg-green-100 text-green-800 text-xs rounded-full\">Best</span>\n            </h3>\n            <div class=\"text-xs text-gray-500\">\n              {{ formatModelType(selectedModel.model_type) }}\n            </div>\n          </div>\n          \n          <!-- Performance Metrics -->\n          <div class=\"grid grid-cols-2 gap-4 mb-3\">\n            <div class=\"space-y-2\">\n              <div class=\"flex justify-between text-sm\">\n                <span class=\"text-gray-600\">F1 Score:</span>\n                <span class=\"font-medium\" :class=\"getScoreColor(selectedModel.f1_score)\">\n                  {{ selectedModel.f1_score ? `${(selectedModel.f1_score * 100).toFixed(1)}%` : 'N/A' }}\n                </span>\n              </div>\n              <div class=\"flex justify-between text-sm\">\n                <span class=\"text-gray-600\">Accuracy:</span>\n                <span class=\"font-medium\" :class=\"getScoreColor(selectedModel.accuracy)\">\n                  {{ selectedModel.accuracy ? `${(selectedModel.accuracy * 100).toFixed(1)}%` : 'N/A' }}\n                </span>\n              </div>\n            </div>\n            <div class=\"space-y-2\">\n              <div class=\"flex justify-between text-sm\">\n                <span class=\"text-gray-600\">Precision:</span>\n                <span class=\"font-medium\" :class=\"getScoreColor(selectedModel.precision)\">\n                  {{ selectedModel.precision ? `${(selectedModel.precision * 100).toFixed(1)}%` : 'N/A' }}\n                </span>\n              </div>\n              <div class=\"flex justify-between text-sm\">\n                <span class=\"text-gray-600\">Recall:</span>\n                <span class=\"font-medium\" :class=\"getScoreColor(selectedModel.recall)\">\n                  {{ selectedModel.recall ? `${(selectedModel.recall * 100).toFixed(1)}%` : 'N/A' }}\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Additional Info -->\n          <div class=\"pt-3 border-t border-gray-200\">\n            <div class=\"grid grid-cols-2 gap-4 text-xs text-gray-600\">\n              <div>\n                <span class=\"font-medium\">Dataset:</span>\n                <span class=\"ml-1\">{{ selectedModel.dataset_name || `Dataset ${selectedModel.dataset}` }}</span>\n              </div>\n              <div>\n                <span class=\"font-medium\">Training Time:</span>\n                <span class=\"ml-1\">{{ formatTrainingTime(selectedModel.training_time_minutes) }}</span>\n              </div>\n              <div>\n                <span class=\"font-medium\">Epochs:</span>\n                <span class=\"ml-1\">{{ selectedModel.best_epoch || selectedModel.num_epochs || 'N/A' }}</span>\n              </div>\n              <div>\n                <span class=\"font-medium\">Created:</span>\n                <span class=\"ml-1\">{{ formatDate(selectedModel.created_at) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Input Methods -->\n    <div class=\"medical-card mb-8\">\n      <div class=\"medical-card-header\">\n        <h2 class=\"text-xl font-semibold text-gray-900\">Input Articles</h2>\n        <p class=\"text-sm text-gray-600\">Choose how to provide articles for classification</p>\n      </div>\n\n      <!-- Method Selection -->\n      <div class=\"flex space-x-4 mb-6\">\n        <button\n          @click=\"inputMethod = 'file'\"\n          class=\"method-btn\"\n          :class=\"{ 'method-btn-active': inputMethod === 'file' }\"\n        >\n          <Icon name=\"document\" class=\"w-5 h-5 mr-2\" />\n          Upload File\n        </button>\n        <button\n          @click=\"inputMethod = 'manual'\"\n          class=\"method-btn\"\n          :class=\"{ 'method-btn-active': inputMethod === 'manual' }\"\n        >\n          <Icon name=\"edit\" class=\"w-5 h-5 mr-2\" />\n          Manual Entry\n        </button>\n      </div>\n\n      <!-- File Upload Method -->\n      <div v-if=\"inputMethod === 'file'\" class=\"space-y-4\">\n        <!-- File Upload Area -->\n        <div\n          @dragover.prevent=\"isDragging = true\"\n          @dragleave.prevent=\"isDragging = false\"\n          @drop.prevent=\"handleFileDrop\"\n          class=\"border-2 border-dashed rounded-lg p-8 text-center transition-colors\"\n          :class=\"{\n            'border-blue-400 bg-blue-50': isDragging,\n            'border-gray-300': !isDragging && !uploadedFile,\n            'border-green-400 bg-green-50': uploadedFile\n          }\"\n        >\n          <Icon \n            :name=\"uploadedFile ? 'document' : 'plus'\" \n            class=\"w-12 h-12 mx-auto text-gray-400 mb-4\"\n          />\n          \n          <div v-if=\"!uploadedFile\">\n            <p class=\"text-lg font-medium text-gray-900 mb-2\">\n              Drop your article file here\n            </p>\n            <p class=\"text-gray-600 mb-4\">CSV or JSON file with title and abstract columns</p>\n            <button\n              type=\"button\"\n              @click=\"triggerFileInput\"\n              class=\"btn-primary\"\n            >\n              <Icon name=\"plus\" class=\"w-4 h-4 mr-2\" />\n              Choose File\n            </button>\n            <input\n              ref=\"fileInputRef\"\n              type=\"file\"\n              accept=\".csv,.json\"\n              class=\"hidden\"\n              @change=\"handleFileSelect\"\n            />\n          </div>\n\n          <!-- File Info -->\n          <div v-else class=\"text-left max-w-md mx-auto\">\n            <div class=\"flex items-start space-x-3\">\n              <Icon name=\"document\" class=\"w-6 h-6 text-green-600 mt-1\" />\n              <div class=\"flex-1\">\n                <p class=\"font-medium text-gray-900\">{{ uploadedFile.name }}</p>\n                <p v-if=\"parsedArticles.length\" class=\"text-sm text-green-600 mt-1\">\n                  {{ parsedArticles.length }} articles found\n                </p>\n                <div class=\"mt-2\">\n                  <button\n                    @click=\"removeFile\"\n                    class=\"text-sm text-red-600 hover:text-red-700\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Manual Entry Method -->\n      <div v-if=\"inputMethod === 'manual'\" class=\"space-y-4\">\n        <div class=\"flex justify-between items-center\">\n          <h4 class=\"text-lg font-medium text-gray-900\">Articles</h4>\n          <button @click=\"addManualArticle\" class=\"btn-outline\">\n            <Icon name=\"plus\" class=\"w-4 h-4 mr-2\" />\n            Add Article\n          </button>\n        </div>\n\n        <div class=\"space-y-6\">\n          <div\n            v-for=\"(article, index) in manualArticles\"\n            :key=\"index\"\n            class=\"p-4 border border-gray-200 rounded-lg\"\n          >\n            <div class=\"flex justify-between items-start mb-4\">\n              <h5 class=\"font-medium text-gray-900\">Article {{ index + 1 }}</h5>\n              <button\n                @click=\"removeManualArticle(index)\"\n                class=\"text-red-600 hover:text-red-700\"\n              >\n                <Icon name=\"delete\" class=\"w-4 h-4\" />\n              </button>\n            </div>\n\n            <div class=\"space-y-4\">\n              <div>\n                <label :for=\"`title-${index}`\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Title *\n                </label>\n                <input\n                  :id=\"`title-${index}`\"\n                  v-model=\"article.title\"\n                  type=\"text\"\n                  required\n                  class=\"input-field\"\n                  placeholder=\"Enter article title...\"\n                />\n              </div>\n\n              <div>\n                <label :for=\"`abstract-${index}`\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Abstract *\n                </label>\n                <textarea\n                  :id=\"`abstract-${index}`\"\n                  v-model=\"article.abstract\"\n                  rows=\"4\"\n                  required\n                  class=\"input-field\"\n                  placeholder=\"Enter article abstract...\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"manualArticles.length === 0\" class=\"text-center py-8 text-gray-500\">\n          <Icon name=\"document\" class=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p>No articles added yet. Click \"Add Article\" to get started.</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Action Buttons -->\n    <div class=\"flex items-center justify-between\">\n      <div class=\"text-sm\" :class=\"canClassify ? 'text-green-600' : 'text-gray-500'\">\n        <Icon v-if=\"canClassify\" name=\"check-circle\" class=\"w-4 h-4 inline mr-1 text-green-500\" />\n        {{ getArticleCount() }} articles ready for classification\n        {{ selectedModelId && selectedModelId !== '' ? `‚Ä¢ Model: ${selectedModel?.name || 'Selected'}` : '' }}\n      </div>\n\n      <div class=\"flex space-x-4\">\n        <button\n          @click=\"clearAll\"\n          class=\"btn-secondary\"\n          :disabled=\"loading\"\n        >\n          Clear All\n        </button>\n        \n        <button\n          @click=\"classifyBatch\"\n          class=\"btn-primary\"\n          :disabled=\"!canClassify || loading\"\n        >\n          <Icon v-if=\"loading\" name=\"clock\" class=\"w-4 h-4 mr-2 animate-spin\" />\n          <Icon v-else name=\"brain\" class=\"w-4 h-4 mr-2\" />\n          {{ loading ? 'Classifying...' : 'Classify Articles' }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Results Display -->\n    <div v-if=\"batchResults && batchResults.results && batchResults.results.length > 0\" class=\"mt-8\">\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <h2 class=\"text-xl font-semibold text-gray-900\">Classification Results</h2>\n              <p class=\"text-sm text-gray-600\">\n                Successfully classified {{ (batchResults as any).total_processed || batchResults.results.length }} articles in {{ ((batchResults as any).processing_time_seconds * 1000 || batchResults.total_inference_time_ms).toFixed(0) }}ms\n              </p>\n            </div>\n            <div class=\"text-sm text-gray-500\">\n              <span class=\"font-medium\">Model:</span> {{ (batchResults as any).model_used || 'Unknown' }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Results Grid -->\n        <div class=\"space-y-4\">\n          <div \n            v-for=\"(result, index) in batchResults.results\" \n            :key=\"index\"\n            class=\"border border-gray-200 rounded-lg p-4 bg-gray-50\"\n          >\n            <!-- Article Title -->\n            <div class=\"flex items-start justify-between mb-3\">\n              <h3 class=\"font-medium text-gray-900 text-sm\">\n                {{ (result as any).title || `Article ${result.article_index}` }}\n              </h3>\n              <div class=\"text-xs text-gray-500 ml-4\">\n                {{ result.inference_time_ms ? result.inference_time_ms.toFixed(1) + 'ms' : 'N/A' }}\n              </div>\n            </div>\n\n            <!-- Predicted Domains -->\n            <div v-if=\"result.predicted_domains && result.predicted_domains.length > 0\" class=\"mb-3\">\n              <h4 class=\"text-xs font-medium text-gray-700 mb-2\">Predicted Medical Domains</h4>\n              <div class=\"flex flex-wrap gap-2\">\n                <span \n                  v-for=\"domain in result.predicted_domains\" \n                  :key=\"domain\"\n                  class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\"\n                >\n                  {{ formatDomain(domain) }}\n                </span>\n              </div>\n            </div>\n\n            <!-- Confidence Scores -->\n            <div v-if=\"result.confidence_scores && Object.keys(result.confidence_scores).length > 0\" class=\"mb-2\">\n              <h4 class=\"text-xs font-medium text-gray-700 mb-2\">Confidence Scores</h4>\n              <div class=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                <div \n                  v-for=\"[domain, score] in getSortedConfidenceScores(result.confidence_scores)\" \n                  :key=\"domain\"\n                  class=\"flex items-center justify-between text-xs bg-white rounded px-2 py-1\"\n                >\n                  <span class=\"text-gray-700 truncate mr-2\">{{ formatDomain(domain) }}</span>\n                  <div class=\"flex items-center space-x-1\">\n                    <div class=\"w-10 bg-gray-200 rounded-full h-1\">\n                      <div \n                        class=\"h-1 rounded-full\"\n                        :class=\"score >= ((result as any).prediction_threshold || 0.5) ? 'bg-green-500' : 'bg-gray-400'\"\n                        :style=\"`width: ${score * 100}%`\"\n                      ></div>\n                    </div>\n                    <span class=\"font-mono text-gray-900 text-xs w-8 text-right\">{{ (score * 100).toFixed(0) }}%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Empty State -->\n            <div v-if=\"(!result.predicted_domains || result.predicted_domains.length === 0)\" class=\"text-center py-4\">\n              <Icon name=\"alert-circle\" class=\"w-5 h-5 text-yellow-500 mx-auto mb-2\" />\n              <p class=\"text-sm text-gray-600\">No domains predicted for this article</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"mt-6 pt-4 border-t border-gray-200 flex justify-between items-center\">\n          <button \n            @click=\"clearResults\"\n            class=\"btn-secondary text-sm\"\n          >\n            Clear Results\n          </button>\n          <button \n            @click=\"goToHistory\"\n            class=\"btn-outline text-sm\"\n          >\n            View Full History ‚Üí\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Error Display -->\n    <div v-if=\"classificationStore.error\" class=\"mt-8\">\n      <div class=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <div class=\"flex items-center\">\n          <Icon name=\"alert-circle\" class=\"w-5 h-5 text-red-600 mr-2\" />\n          <h3 class=\"text-red-800 font-medium\">Classification Error</h3>\n        </div>\n        <p class=\"text-red-700 mt-1 text-sm\">{{ classificationStore.error }}</p>\n        <button \n          @click=\"classificationStore.clearError\" \n          class=\"mt-3 text-red-600 hover:text-red-800 text-sm underline\"\n        >\n          Dismiss\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useToast } from 'vue-toastification'\nimport { useRouter } from 'vue-router'\nimport Icon from '@/components/ui/Icon.vue'\nimport { useModelStore } from '@/stores/models'\nimport { useClassificationStore } from '@/stores/classification'\nimport type { BatchClassificationResponse } from '@/types'\n\n// Composables\nconst toast = useToast()\nconst router = useRouter()\nconst modelStore = useModelStore()\nconst classificationStore = useClassificationStore()\n\n// Reactive state\nconst loading = ref(false)\nconst attempted = ref(false)\nconst selectedModelId = ref<string>('') // HTML select returns strings\nconst inputMethod = ref<'file' | 'manual'>('file')\nconst isDragging = ref(false)\nconst uploadedFile = ref<File | null>(null)\nconst fileInputRef = ref<HTMLInputElement>()\nconst parsedArticles = ref<Array<{ title: string; abstract: string }>>([])\nconst manualArticles = ref<Array<{ title: string; abstract: string }>>([])\nconst batchResults = ref<BatchClassificationResponse | null>(null)\n\n// Computed\nconst trainedModels = computed(() => \n  modelStore.models.filter(m => m.status === 'trained' || m.is_trained)\n)\n\nconst bestModel = computed(() => {\n  if (trainedModels.value.length === 0) return null\n  \n  // Helper function to get model score priority\n  const getModelScore = (model: any) => {\n    // Prioritize F1 score, then accuracy\n    if (model.f1_score) return { primary: model.f1_score, secondary: model.accuracy || 0 }\n    if (model.accuracy) return { primary: model.accuracy, secondary: 0 }\n    return { primary: 0, secondary: 0 }\n  }\n  \n  // Sort models by performance metrics and recency\n  return trainedModels.value\n    .slice()\n    .sort((a, b) => {\n      const aScore = getModelScore(a)\n      const bScore = getModelScore(b)\n      \n      // Compare primary scores (F1 or accuracy)\n      if (aScore.primary !== bScore.primary) {\n        return bScore.primary - aScore.primary\n      }\n      \n      // If primary scores equal, compare secondary\n      if (aScore.secondary !== bScore.secondary) {\n        return bScore.secondary - aScore.secondary\n      }\n      \n      // If all scores equal, prefer most recent\n      return new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\n    })[0]\n})\n\nconst selectedModel = computed(() => \n  trainedModels.value.find(m => m.id === Number(selectedModelId.value)) || null\n)\n\nconst canClassify = computed(() => {\n  const hasModel = selectedModelId.value && selectedModelId.value !== ''\n  const hasArticles = getArticleCount() > 0\n  return hasModel && hasArticles\n})\n\n// Methods\nconst getArticleCount = () => {\n  switch (inputMethod.value) {\n    case 'file': return parsedArticles.value.length\n    case 'manual': return manualArticles.value.filter(a => a.title.trim() && a.abstract.trim()).length\n    default: return 0\n  }\n}\n\nconst getArticles = () => {\n  switch (inputMethod.value) {\n    case 'file': return parsedArticles.value\n    case 'manual': return manualArticles.value.filter(a => a.title.trim() && a.abstract.trim())\n    default: return []\n  }\n}\n\nconst triggerFileInput = () => {\n  fileInputRef.value?.click()\n}\n\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (target.files && target.files[0]) {\n    uploadedFile.value = target.files[0]\n    parseFile(target.files[0])\n  }\n}\n\nconst handleFileDrop = (event: DragEvent) => {\n  isDragging.value = false\n  \n  if (event.dataTransfer?.files && event.dataTransfer.files[0]) {\n    uploadedFile.value = event.dataTransfer.files[0]\n    parseFile(event.dataTransfer.files[0])\n  }\n}\n\nconst parseFile = async (file: File) => {\n  try {\n    console.log('Parsing file:', file.name, 'size:', file.size)\n    const text = await file.text()\n    const extension = file.name.split('.').pop()?.toLowerCase()\n    \n    if (extension === 'csv') {\n      parsedArticles.value = parseCSV(text)\n    } else if (extension === 'json') {\n      parsedArticles.value = parseJSON(text)\n    } else {\n      toast.error('Unsupported file format. Please use CSV or JSON.')\n      return\n    }\n    \n    console.log('Parsed articles:', parsedArticles.value.length)\n    \n    const MAX_ARTICLES = 1000\n    if (parsedArticles.value.length > MAX_ARTICLES) {\n      toast.warning(`‚ö†Ô∏è Large file detected: ${parsedArticles.value.length} articles found. The system can only process up to ${MAX_ARTICLES} articles at once. You may need to split this file into smaller batches.`)\n    } else {\n      toast.success(`Parsed ${parsedArticles.value.length} articles from file`)\n    }\n  } catch (error) {\n    console.error('Error parsing file:', error)\n    toast.error('Error parsing file. Please check the format.')\n    parsedArticles.value = [] // Clear any partial parsing\n  }\n}\n\nconst parseCSV = (text: string) => {\n  const lines = text.split('\\n').filter(line => line.trim())\n  \n  if (lines.length < 2) {\n    throw new Error('CSV file must have at least a header row and one data row')\n  }\n  \n  const headers = lines[0]?.split(',').map(h => h.trim().replace(/\"/g, '')) || []\n  console.log('CSV headers found:', headers)\n  \n  const titleIndex = headers.findIndex(h => \n    h.toLowerCase().includes('title') || \n    h.toLowerCase() === 'title' ||\n    h.toLowerCase() === 'name'\n  )\n  const abstractIndex = headers.findIndex(h => \n    h.toLowerCase().includes('abstract') || \n    h.toLowerCase().includes('summary') ||\n    h.toLowerCase().includes('description')\n  )\n  \n  console.log('Title index:', titleIndex, 'Abstract index:', abstractIndex)\n  \n  if (titleIndex === -1 || abstractIndex === -1) {\n    throw new Error(`CSV must contain title and abstract columns. Found headers: ${headers.join(', ')}`)\n  }\n  \n  const articles = lines.slice(1).map((line, index) => {\n    const values = line.split(',').map(v => v.trim().replace(/\"/g, ''))\n    const article = {\n      title: values[titleIndex] || '',\n      abstract: values[abstractIndex] || ''\n    }\n    console.log(`Article ${index + 1}:`, article.title.substring(0, 50), '...', article.abstract.substring(0, 50))\n    return article\n  }).filter(article => article.title.trim() && article.abstract.trim())\n  \n  console.log('Valid articles parsed:', articles.length)\n  return articles\n}\n\nconst parseJSON = (text: string) => {\n  const data = JSON.parse(text)\n  if (!Array.isArray(data)) {\n    throw new Error('JSON must be an array of articles')\n  }\n  \n  return data.map((item: any) => ({\n    title: item.title || item.Title || '',\n    abstract: item.abstract || item.Abstract || item.summary || ''\n  })).filter(article => article.title && article.abstract)\n}\n\nconst addManualArticle = () => {\n  manualArticles.value.push({ title: '', abstract: '' })\n}\n\nconst removeManualArticle = (index: number) => {\n  manualArticles.value.splice(index, 1)\n}\n\nconst removeFile = () => {\n  uploadedFile.value = null\n  parsedArticles.value = []\n  if (fileInputRef.value) {\n    fileInputRef.value.value = ''\n  }\n}\n\nconst onModelChange = () => {\n  // Model changed, ready for new classification\n}\n\nconst classifyBatch = async () => {\n  if (!selectedModelId.value || selectedModelId.value === '') {\n    attempted.value = true\n    toast.error('Please select a model for classification')\n    return\n  }\n  \n  const articles = getArticles()\n  if (articles.length === 0) {\n    toast.error('Please add articles to classify')\n    return\n  }\n  \n  // Check article limit before submitting\n  const MAX_ARTICLES = 1000\n  if (articles.length > MAX_ARTICLES) {\n    toast.error(`Too many articles: Maximum ${MAX_ARTICLES} articles allowed, but you have ${articles.length}. Please reduce the number of articles or split into smaller batches.`)\n    return\n  }\n  \n  loading.value = true\n  batchResults.value = null // Clear previous results\n  \n  try {\n    // Use the classification store for batch processing\n    const results = await classificationStore.batchClassify(Number(selectedModelId.value), {\n      articles: articles\n    })\n    \n    // Store results for display\n    batchResults.value = results\n    \n    toast.success(`Successfully classified ${articles.length} articles!`)\n    \n    // Scroll to results\n    setTimeout(() => {\n      const resultsElement = document.querySelector('.medical-card:last-of-type')\n      if (resultsElement) {\n        resultsElement.scrollIntoView({ behavior: 'smooth', block: 'start' })\n      }\n    }, 100)\n    \n  } catch (error: any) {\n    console.error('Batch classification error:', error)\n    // Show the specific error message from the store\n    const errorMessage = error.message || classificationStore.error || 'Error during batch classification. Please try again.'\n    toast.error(errorMessage)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst clearAll = () => {\n  uploadedFile.value = null\n  parsedArticles.value = []\n  manualArticles.value = []\n  batchResults.value = null\n  if (fileInputRef.value) {\n    fileInputRef.value.value = ''\n  }\n  toast.info('All data cleared')\n}\n\nconst clearResults = () => {\n  batchResults.value = null\n  toast.info('Results cleared')\n}\n\nconst goToHistory = () => {\n  router.push('/classification/history')\n}\n\n// Helper functions\nconst formatDomain = (domain: string) => {\n  return domain.charAt(0).toUpperCase() + domain.slice(1).replace(/_/g, ' ')\n}\n\nconst formatModelType = (modelType: string) => {\n  const typeMap: Record<string, string> = {\n    'biobert': 'BioBERT',\n    'clinicalbert': 'ClinicalBERT', \n    'scibert': 'SciBERT',\n    'pubmedbert': 'PubMedBERT',\n    'bert': 'BERT',\n    'hybrid': 'Hybrid Ensemble',\n    'traditional': 'Traditional ML'\n  }\n  return typeMap[modelType] || modelType.charAt(0).toUpperCase() + modelType.slice(1)\n}\n\nconst getScoreColor = (score: number | null) => {\n  if (!score) return 'text-gray-500'\n  if (score >= 0.8) return 'text-green-600'\n  if (score >= 0.7) return 'text-blue-600'\n  if (score >= 0.6) return 'text-yellow-600'\n  return 'text-red-600'\n}\n\nconst formatTrainingTime = (minutes: number | null) => {\n  if (!minutes) return 'N/A'\n  if (minutes < 60) return `${minutes.toFixed(0)}m`\n  if (minutes < 1440) return `${(minutes / 60).toFixed(1)}h`\n  return `${(minutes / 1440).toFixed(1)}d`\n}\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric',\n    year: 'numeric'\n  })\n}\n\nconst getSortedConfidenceScores = (confidenceScores: Record<string, number>) => {\n  return Object.entries(confidenceScores)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, 6) // Show top 6 scores\n}\n\n// Lifecycle\nonMounted(async () => {\n  try {\n    await modelStore.fetchModels()\n    \n    // Set the best model as default after models are loaded\n    if (bestModel.value && !selectedModelId.value) {\n      selectedModelId.value = String(bestModel.value.id)\n      toast.success(`Best model \"${bestModel.value.name}\" selected automatically`, {\n        timeout: 3000\n      })\n    }\n  } catch (error) {\n    console.error('Failed to load models:', error)\n    toast.error('Failed to load models')\n  }\n})\n</script>\n\n<style scoped>\n.input-field {\n  @apply w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent;\n}\n\n.medical-card {\n  @apply bg-white rounded-xl shadow-sm border border-gray-200 p-6;\n}\n\n.medical-card-header {\n  @apply mb-6 pb-4 border-b border-gray-200;\n}\n\n.method-btn {\n  @apply px-4 py-2 border border-gray-300 rounded-lg font-medium transition-colors inline-flex items-center;\n}\n\n.method-btn-active {\n  @apply bg-blue-600 text-white border-blue-600;\n}\n\n.btn-primary {\n  @apply bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.btn-secondary {\n  @apply bg-gray-200 hover:bg-gray-300 text-gray-700 px-6 py-2 rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.btn-outline {\n  @apply border border-gray-300 hover:bg-gray-50 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.bg-gradient-from-blue-50 {\n  background: linear-gradient(135deg, rgb(239 246 255) 0%, rgb(249 250 251) 100%);\n}\n</style>\n"],"names":["toast","useToast","router","useRouter","modelStore","useModelStore","classificationStore","useClassificationStore","loading","ref","attempted","selectedModelId","inputMethod","isDragging","uploadedFile","fileInputRef","parsedArticles","manualArticles","batchResults","trainedModels","computed","m","bestModel","getModelScore","model","a","b","aScore","bScore","selectedModel","canClassify","hasModel","hasArticles","getArticleCount","getArticles","triggerFileInput","handleFileSelect","event","target","parseFile","handleFileDrop","file","text","extension","parseCSV","parseJSON","MAX_ARTICLES","error","lines","line","headers","h","titleIndex","abstractIndex","articles","index","values","v","article","data","item","addManualArticle","removeManualArticle","removeFile","onModelChange","classifyBatch","results","resultsElement","errorMessage","clearAll","clearResults","goToHistory","formatDomain","domain","formatModelType","modelType","getScoreColor","score","formatTrainingTime","minutes","formatDate","dateString","getSortedConfidenceScores","confidenceScores","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$event","_normalizeClass","_cache","_Fragment","_renderList","_toDisplayString","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createBlock","Icon","_createTextVNode","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_createVNode","_hoisted_26","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_27","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_39","_hoisted_40","_vModelText","_hoisted_42","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","result","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_unref","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","args"],"mappings":"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"}