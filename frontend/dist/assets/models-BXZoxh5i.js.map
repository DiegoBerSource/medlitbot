{"version":3,"file":"models-BXZoxh5i.js","sources":["../../src/stores/models.ts"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { modelApi } from '@/utils/api'\nimport type { MLModel, MLModelCreateRequest, StartTrainingRequest } from '@/types'\n\nexport const useModelStore = defineStore('models', () => {\n  // State\n  const models = ref<MLModel[]>([])\n  const currentModel = ref<MLModel | null>(null)\n  const loading = ref(false)\n  const error = ref<string | null>(null)\n\n  // Computed\n  const trainedModels = computed(() => \n    models.value.filter(m => m.is_trained)\n  )\n  \n  const modelsByStatus = computed(() => ({\n    trained: models.value.filter(m => m.status === 'trained'),\n    training: models.value.filter(m => m.status === 'training'),\n    created: models.value.filter(m => m.status === 'created'),\n    failed: models.value.filter(m => m.status === 'failed')\n  }))\n\n  const modelCount = computed(() => models.value.length)\n\n  // Actions\n  const fetchModels = async () => {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await modelApi.getModels()\n      models.value = response.items || response.results || []\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to fetch models'\n      console.error('Failed to fetch models:', err)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const fetchModel = async (id: number) => {\n    loading.value = true\n    error.value = null\n    try {\n      currentModel.value = await modelApi.getModel(id)\n      return currentModel.value\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to fetch model'\n      console.error('Failed to fetch model:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const createModel = async (data: MLModelCreateRequest) => {\n    loading.value = true\n    error.value = null\n    try {\n      const newModel = await modelApi.createModel(data)\n      models.value.push(newModel)\n      return newModel\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to create model'\n      console.error('Failed to create model:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const updateModel = async (id: number, data: Partial<MLModelCreateRequest>) => {\n    loading.value = true\n    error.value = null\n    try {\n      const updatedModel = await modelApi.updateModel(id, data as any)\n      const index = models.value.findIndex(m => m.id === id)\n      if (index !== -1) {\n        models.value[index] = updatedModel\n      }\n      if (currentModel.value?.id === id) {\n        currentModel.value = updatedModel\n      }\n      return updatedModel\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to update model'\n      console.error('Failed to update model:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const deleteModel = async (id: number) => {\n    loading.value = true\n    error.value = null\n    try {\n      await modelApi.deleteModel(id)\n      models.value = models.value.filter(m => m.id !== id)\n      if (currentModel.value?.id === id) {\n        currentModel.value = null\n      }\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to delete model'\n      console.error('Failed to delete model:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const startTraining = async (id: number, params: StartTrainingRequest) => {\n    loading.value = true\n    error.value = null\n    try {\n      const trainingJob = await modelApi.startTraining(id, params)\n      // Update model status to training\n      const index = models.value.findIndex(m => m.id === id)\n      if (index !== -1) {\n        models.value[index] = { ...models.value[index], status: 'training' } as any\n      }\n      return trainingJob\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Failed to start training'\n      console.error('Failed to start training:', err)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const clearError = () => {\n    error.value = null\n  }\n\n  const clearCurrentModel = () => {\n    currentModel.value = null\n  }\n\n  return {\n    // State\n    models,\n    currentModel,\n    loading,\n    error,\n    \n    // Computed\n    trainedModels,\n    modelsByStatus,\n    modelCount,\n    \n    // Actions\n    fetchModels,\n    fetchModel,\n    createModel,\n    updateModel,\n    deleteModel,\n    startTraining,\n    clearError,\n    clearCurrentModel\n  }\n})\n"],"names":["useModelStore","defineStore","models","ref","currentModel","loading","error","trainedModels","computed","m","modelsByStatus","modelCount","response","modelApi","err","id","data","newModel","updatedModel","index","params","trainingJob"],"mappings":"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"}