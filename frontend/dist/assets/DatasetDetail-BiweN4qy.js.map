{"version":3,"file":"DatasetDetail-BiweN4qy.js","sources":["../../src/views/datasets/DatasetDetail.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 max-w-7xl mx-auto\">\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"flex items-center justify-center h-64\">\n      <div class=\"text-center\">\n        <Icon name=\"clock\" class=\"w-8 h-8 text-blue-500 mx-auto mb-2 animate-spin\" />\n        <p class=\"text-gray-600\">Loading dataset details...</p>\n      </div>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n      <div class=\"flex items-center\">\n        <Icon name=\"warning\" class=\"w-5 h-5 text-red-600 mr-2\" />\n        <h3 class=\"text-red-800 font-medium\">Error Loading Dataset</h3>\n      </div>\n      <p class=\"text-red-700 mt-1\">{{ error }}</p>\n      <button @click=\"loadDataset\" class=\"mt-3 text-red-600 hover:text-red-800 text-sm underline\">\n        Try Again\n      </button>\n    </div>\n\n    <!-- Dataset Details -->\n    <div v-else-if=\"dataset\" class=\"space-y-8\">\n      <!-- Header Section -->\n      <div class=\"medical-card\">\n        <div class=\"flex items-center justify-between mb-6\">\n          <div class=\"flex items-center space-x-4\">\n            <div class=\"p-3 bg-purple-100 rounded-lg\">\n              <Icon name=\"database\" class=\"w-8 h-8 text-purple-600\" />\n            </div>\n            <div>\n              <h1 class=\"text-3xl font-bold text-gray-900 flex items-center\">\n                {{ dataset.name }}\n                <span v-if=\"dataset.is_validated\" class=\"ml-3 px-2 py-1 bg-green-100 text-green-800 text-sm rounded-full\">✓ Validated</span>\n                <span v-else class=\"ml-3 px-2 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full\">⚠ Not Validated</span>\n              </h1>\n              <p class=\"text-gray-600 mt-1\">{{ dataset.description || 'No description provided' }}</p>\n              <div class=\"flex items-center space-x-4 mt-2\">\n                <span class=\"text-sm text-gray-500\">{{ dataset.total_samples || 0 }} samples</span>\n                <span class=\"text-sm text-gray-500\">{{ formatFileSize(dataset.file_size_mb) }}</span>\n                <span class=\"text-sm text-gray-500\">{{ dataset.file_extension?.toUpperCase() || 'Unknown' }} format</span>\n                <span class=\"text-sm text-gray-500\">Uploaded {{ formatDate(dataset.uploaded_at) }}</span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Action Buttons -->\n          <div class=\"flex space-x-3\">\n            <button class=\"btn-secondary\" @click=\"downloadDataset\" :disabled=\"!dataset.file_size_mb\">\n              <Icon name=\"document\" class=\"w-4 h-4 mr-2\" />\n              Download\n            </button>\n            <button class=\"btn-secondary\" @click=\"validateDataset\" :disabled=\"loading\">\n              <Icon name=\"success\" class=\"w-4 h-4 mr-2\" />\n              Validate\n            </button>\n            <button class=\"btn-primary\" @click=\"trainModel\" :disabled=\"!dataset.is_validated\">\n              <Icon name=\"brain\" class=\"w-4 h-4 mr-2\" />\n              Train Model\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Statistics Overview -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <StatCard\n          label=\"Total Samples\"\n          :value=\"dataset.total_samples || 0\"\n          icon=\"list\"\n          color=\"blue\"\n        />\n        <StatCard\n          label=\"Medical Domains\"\n          :value=\"dataset.medical_domains?.length || 0\"\n          icon=\"chart-bar\"\n          color=\"purple\"\n        />\n        <StatCard\n          label=\"Avg Title Length\"\n          :value=\"dataset.avg_title_length ? `${Math.round(dataset.avg_title_length)} chars` : 'N/A'\"\n          icon=\"document\"\n          color=\"green\"\n        />\n        <StatCard\n          label=\"Avg Abstract Length\"\n          :value=\"dataset.avg_abstract_length ? `${Math.round(dataset.avg_abstract_length)} chars` : 'N/A'\"\n          icon=\"document\"\n          color=\"yellow\"\n        />\n      </div>\n\n      <!-- Charts and Analysis -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <!-- Domain Distribution Chart -->\n        <ChartCard title=\"Medical Domain Distribution\" :loading=\"false\">\n          <DoughnutChart \n            v-if=\"domainChartData?.datasets?.[0]?.data?.length\"\n            :data=\"domainChartData\" \n            :options=\"doughnutOptions\"\n            :height=\"300\"\n          />\n          <div v-else class=\"p-8 text-center\">\n            <Icon name=\"chart-bar\" class=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n            <p class=\"text-gray-500\">No domain distribution data available</p>\n          </div>\n        </ChartCard>\n\n        <!-- Validation Status -->\n        <ChartCard title=\"Data Quality Status\" :loading=\"false\">\n          <div class=\"p-4\">\n            <div class=\"space-y-4\">\n              <div class=\"flex items-center justify-between\">\n                <span class=\"text-sm font-medium text-gray-700\">Validation Status</span>\n                <span class=\"text-sm font-medium\" :class=\"dataset.is_validated ? 'text-green-600' : 'text-yellow-600'\">\n                  {{ dataset.is_validated ? 'Validated' : 'Pending Validation' }}\n                </span>\n              </div>\n              \n              <div class=\"flex items-center justify-between\">\n                <span class=\"text-sm font-medium text-gray-700\">File Format</span>\n                <span class=\"text-sm text-gray-900\">{{ dataset.file_extension?.toUpperCase() || 'Unknown' }}</span>\n              </div>\n              \n              <div class=\"flex items-center justify-between\">\n                <span class=\"text-sm font-medium text-gray-700\">File Size</span>\n                <span class=\"text-sm text-gray-900\">{{ formatFileSize(dataset.file_size_mb) }}</span>\n              </div>\n\n              <!-- Validation Errors -->\n              <div v-if=\"dataset.validation_errors && (dataset.validation_errors as any)?.length > 0\" class=\"mt-6 pt-4 border-t border-gray-200\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-3\">Validation Issues</h4>\n                <div class=\"space-y-2\">\n                  <div \n                    v-for=\"(error, index) in dataset.validation_errors\" \n                    :key=\"index\"\n                    class=\"flex items-center text-sm\"\n                  >\n                    <div class=\"w-2 h-2 bg-yellow-500 rounded-full mr-3\"></div>\n                    <span class=\"text-gray-700\">{{ error }}</span>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Quality Metrics -->\n              <div class=\"mt-6 pt-4 border-t border-gray-200\">\n                <h4 class=\"text-sm font-medium text-gray-700 mb-3\">Quality Metrics</h4>\n                <div class=\"space-y-2\">\n                  <div class=\"flex items-center text-sm\">\n                    <Icon name=\"success\" class=\"w-4 h-4 text-green-500 mr-2\" />\n                    <span class=\"text-gray-700\">{{ dataset.total_samples || 0 }} valid samples</span>\n                  </div>\n                  <div class=\"flex items-center text-sm\">\n                    <Icon name=\"chart-bar\" class=\"w-4 h-4 text-blue-500 mr-2\" />\n                    <span class=\"text-gray-700\">{{ dataset.medical_domains?.length || 0 }} unique domains</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ChartCard>\n      </div>\n\n      <!-- Medical Domains Breakdown -->\n      <div v-if=\"dataset.medical_domains && dataset.medical_domains.length > 0\" class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <h2 class=\"text-xl font-semibold text-gray-900\">Medical Domains</h2>\n          <p class=\"text-sm text-gray-600\">Distribution of medical domains in this dataset</p>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          <div \n            v-for=\"domain in dataset.medical_domains\" \n            :key=\"domain\"\n            class=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <h3 class=\"font-medium text-gray-900\">{{ formatDomain(domain) }}</h3>\n              <span class=\"text-sm text-gray-500\">\n                {{ getDomainCount(domain) }} samples\n              </span>\n            </div>\n            <div class=\"mt-2\">\n              <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  class=\"h-2 rounded-full bg-purple-500\"\n                  :style=\"`width: ${getDomainPercentage(domain)}%`\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Quick Actions -->\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <h2 class=\"text-xl font-semibold text-gray-900\">Quick Actions</h2>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <button \n            @click=\"trainModel\"\n            class=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left\"\n            :disabled=\"!dataset.is_validated\"\n          >\n            <Icon name=\"brain\" class=\"w-6 h-6 text-blue-500 mb-2\" />\n            <h3 class=\"font-medium text-gray-900\">Train AI Model</h3>\n            <p class=\"text-sm text-gray-600 mt-1\">Create a new classification model</p>\n          </button>\n          \n          <button \n            @click=\"validateDataset\"\n            class=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left\"\n          >\n            <Icon name=\"success\" class=\"w-6 h-6 text-green-500 mb-2\" />\n            <h3 class=\"font-medium text-gray-900\">Validate Dataset</h3>\n            <p class=\"text-sm text-gray-600 mt-1\">Check data quality and structure</p>\n          </button>\n          \n          <button \n            @click=\"exportDataset\"\n            class=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left\"\n          >\n            <Icon name=\"document\" class=\"w-6 h-6 text-purple-500 mb-2\" />\n            <h3 class=\"font-medium text-gray-900\">Export Dataset</h3>\n            <p class=\"text-sm text-gray-600 mt-1\">Download in various formats</p>\n          </button>\n        </div>\n      </div>\n\n      <!-- Dataset Samples Preview -->\n      <div class=\"medical-card\">\n        <div class=\"medical-card-header\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <h2 class=\"text-xl font-semibold text-gray-900\">Dataset Samples</h2>\n              <p class=\"text-sm text-gray-600\">Preview of articles in this dataset</p>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n              <span class=\"text-sm text-gray-500\">\n                Showing {{ Math.min(displayCount, samples.length) }} of {{ dataset.total_samples || 0 }}\n              </span>\n              <button \n                v-if=\"samples.length > displayCount\"\n                @click=\"loadMoreSamples\"\n                class=\"btn-outline text-sm\"\n              >\n                Load More\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Samples Loading -->\n        <div v-if=\"samplesLoading\" class=\"flex items-center justify-center h-32\">\n          <Icon name=\"clock\" class=\"w-6 h-6 text-blue-500 animate-spin\" />\n        </div>\n\n        <!-- Samples Table -->\n        <div v-else-if=\"samples.length > 0\" class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Domains</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Journal</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Year</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              <tr v-for=\"sample in displayedSamples\" :key=\"sample.id\" class=\"hover:bg-gray-50\">\n                <td class=\"px-6 py-4\">\n                  <div class=\"max-w-md\">\n                    <p class=\"text-sm font-medium text-gray-900 line-clamp-2\">{{ sample.title }}</p>\n                    <p class=\"text-sm text-gray-500 line-clamp-2 mt-1\">{{ sample.abstract }}</p>\n                  </div>\n                </td>\n                <td class=\"px-6 py-4\">\n                  <div class=\"flex flex-wrap gap-1\">\n                    <span \n                      v-for=\"domain in sample.medical_domains?.slice(0, 2)\" \n                      :key=\"domain\"\n                      class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-100 text-purple-800\"\n                    >\n                      {{ formatDomain(domain) }}\n                    </span>\n                    <span \n                      v-if=\"sample.medical_domains && sample.medical_domains.length > 2\"\n                      class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-600\"\n                    >\n                      +{{ sample.medical_domains.length - 2 }}\n                    </span>\n                  </div>\n                </td>\n                <td class=\"px-6 py-4 text-sm text-gray-900\">\n                  {{ sample.journal || 'N/A' }}\n                </td>\n                <td class=\"px-6 py-4 text-sm text-gray-900\">\n                  {{ sample.publication_year || 'N/A' }}\n                </td>\n                <td class=\"px-6 py-4 text-sm font-medium\">\n                  <button \n                    @click=\"viewSample(sample)\"\n                    class=\"text-blue-600 hover:text-blue-900\"\n                  >\n                    View\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Empty Samples State -->\n        <div v-else class=\"text-center py-8\">\n          <Icon name=\"document\" class=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n          <p class=\"text-gray-500\">No samples available</p>\n          <p class=\"text-sm text-gray-400 mt-1\">Upload a file to see dataset samples</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useToast } from 'vue-toastification'\nimport { useDatasetStore } from '@/stores/datasets'\nimport { storeToRefs } from 'pinia'\nimport Icon from '@/components/ui/Icon.vue'\nimport StatCard from '@/components/ui/StatCard.vue'\nimport ChartCard from '@/components/charts/ChartCard.vue'\nimport DoughnutChart from '@/components/charts/DoughnutChart.vue'\nimport { datasetApi } from '@/utils/api'\nimport type { Dataset, DatasetSample } from '@/types'\n\ninterface Props {\n  id: number\n}\n\nconst props = defineProps<Props>()\nconst router = useRouter()\nconst toast = useToast()\nconst datasetStore = useDatasetStore()\nconst { datasets } = storeToRefs(datasetStore)\n\n// State\nconst dataset = ref<Dataset | null>(null)\nconst samples = ref<DatasetSample[]>([])\nconst loading = ref(true)\nconst samplesLoading = ref(false)\nconst error = ref<string | null>(null)\nconst displayCount = ref(10)\n\n// Computed\nconst displayedSamples = computed(() => \n  samples.value.slice(0, displayCount.value)\n)\n\nconst domainChartData = computed(() => {\n  if (!dataset.value?.domain_distribution) return { labels: [], datasets: [{ data: [] }] }\n  \n  const distribution = dataset.value.domain_distribution\n  const labels = Object.keys(distribution)\n  const data = Object.values(distribution)\n  \n  if (labels.length === 0) return { labels: [], datasets: [{ data: [] }] }\n  \n  return {\n    labels: labels.map(formatDomain),\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#8B5CF6', '#EF4444', '#10B981', '#F59E0B', '#3B82F6',\n          '#EC4899', '#84CC16', '#F97316', '#06B6D4', '#6366F1'\n        ],\n        borderWidth: 1,\n        borderColor: '#fff'\n      }\n    ]\n  }\n})\n\nconst doughnutOptions = computed(() => ({\n  plugins: {\n    legend: {\n      position: 'bottom' as const,\n      labels: {\n        padding: 20,\n        usePointStyle: true\n      }\n    }\n  },\n  responsive: true,\n  maintainAspectRatio: false\n}))\n\n// Methods\nconst loadDataset = async () => {\n  loading.value = true\n  error.value = null\n  \n  try {\n    // First check if dataset is in store\n    let foundDataset = datasets.value.find(d => d.id === props.id)\n    \n    if (!foundDataset) {\n      // Fetch from API\n      foundDataset = await datasetApi.getDataset(props.id)\n    }\n    \n    dataset.value = foundDataset\n    \n    // Load samples\n    await loadSamples()\n    \n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'Failed to load dataset'\n    console.error('Failed to load dataset:', err)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst loadSamples = async () => {\n  if (!dataset.value) return\n  \n  samplesLoading.value = true\n  try {\n    const response = await datasetApi.getDatasetSamples(dataset.value.id, 1, 50)\n    samples.value = response.results || response.items || []\n  } catch (err) {\n    console.error('Failed to load samples:', err)\n  } finally {\n    samplesLoading.value = false\n  }\n}\n\nconst loadMoreSamples = () => {\n  displayCount.value = Math.min(displayCount.value + 10, samples.value.length)\n}\n\n// Helper functions\nconst formatFileSize = (sizeMb: number | null) => {\n  if (!sizeMb) return 'Unknown'\n  if (sizeMb < 1) return `${Math.round(sizeMb * 1024)} KB`\n  if (sizeMb < 1024) return `${sizeMb.toFixed(1)} MB`\n  return `${(sizeMb / 1024).toFixed(1)} GB`\n}\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric',\n    year: 'numeric'\n  })\n}\n\nconst formatDomain = (domain: string) => {\n  return domain.charAt(0).toUpperCase() + domain.slice(1).replace(/_/g, ' ')\n}\n\nconst getDomainCount = (domain: string) => {\n  if (!dataset.value?.domain_distribution) return 0\n  return dataset.value.domain_distribution[domain] || 0\n}\n\nconst getDomainPercentage = (domain: string) => {\n  if (!dataset.value?.domain_distribution || !dataset.value.total_samples) return 0\n  const count = dataset.value.domain_distribution[domain] || 0\n  return Math.round((count / dataset.value.total_samples) * 100)\n}\n\n// Action handlers\nconst validateDataset = async () => {\n  if (!dataset.value) return\n  \n  loading.value = true\n  try {\n    await datasetApi.validateDataset(dataset.value.id)\n    toast.success('Dataset validation started')\n    \n    // Reload dataset to get updated validation status\n    setTimeout(() => loadDataset(), 2000)\n    \n  } catch (error) {\n    toast.error('Failed to start validation')\n    console.error('Validation error:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst trainModel = () => {\n  router.push(`/models/create?dataset=${props.id}`)\n}\n\nconst downloadDataset = () => {\n  toast.info('Download functionality coming soon')\n}\n\nconst exportDataset = () => {\n  toast.info('Export functionality coming soon')\n}\n\nconst viewSample = (sample: DatasetSample) => {\n  toast.info(`Viewing sample: ${sample.title}`)\n  // Could open a modal or navigate to sample detail\n}\n\n// Lifecycle\nonMounted(loadDataset)\n</script>\n\n<style scoped>\n.medical-card {\n  @apply bg-white rounded-xl shadow-sm border border-gray-200 p-6;\n}\n\n.medical-card-header {\n  @apply mb-6 pb-4 border-b border-gray-200;\n}\n\n.btn-primary {\n  @apply bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.btn-secondary {\n  @apply bg-gray-200 hover:bg-gray-300 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.btn-outline {\n  @apply border border-gray-300 hover:bg-gray-50 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n</style>\n"],"names":["props","__props","router","useRouter","toast","useToast","datasetStore","useDatasetStore","datasets","storeToRefs","dataset","ref","samples","loading","samplesLoading","error","displayCount","displayedSamples","computed","domainChartData","distribution","labels","data","formatDomain","doughnutOptions","loadDataset","foundDataset","d","datasetApi","loadSamples","err","response","loadMoreSamples","formatFileSize","sizeMb","formatDate","dateString","domain","getDomainCount","getDomainPercentage","count","validateDataset","trainModel","downloadDataset","exportDataset","viewSample","sample","onMounted","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_createVNode","Icon","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_25","StatCard","_hoisted_26","ChartCard","_createBlock","DoughnutChart","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_normalizeClass","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_Fragment","index","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_renderList","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_normalizeStyle","_hoisted_51","_hoisted_52","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","$event","_hoisted_73","_hoisted_74"],"mappings":"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"}