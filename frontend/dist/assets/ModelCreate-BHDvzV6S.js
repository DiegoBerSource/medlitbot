import{k as P,X as A,P as L,r as c,e as N,w as M,a as $,l as n,J as o,A as t,z as v,Z as r,_ as u,m as f,C as d,$ as g,N as H,F as C,G as S,a0 as x,q as B,B as O,E as I}from"./vendor-CqXe5Vco.js";import{b as j,_ as V,a as G}from"./index-D07s5EKd.js";import{u as W}from"./models-BXZoxh5i.js";import{u as J}from"./datasets-Bt4WZcQM.js";import"./utils-DWA4hw-v.js";import"./charts-DqDWejEF.js";const X={class:"p-6 max-w-4xl mx-auto"},Z={class:"medical-card"},K={class:"grid grid-cols-1 md:grid-cols-2 gap-6"},Q={key:0,class:"mt-1 text-sm text-red-600"},Y={key:0,class:"mt-1 text-sm text-red-600"},ee={key:0},te=["value"],ae={key:0,class:"mt-1 text-sm text-red-600"},se={class:"medical-card"},le={class:"space-y-4"},ie=["value"],re={key:0,class:"mt-1 text-sm text-red-600"},oe={key:0,class:"p-4 bg-gray-50 rounded-lg border"},ne={class:"grid grid-cols-2 gap-4 text-sm"},de={class:"ml-2 font-medium"},me={key:0,class:"ml-2 font-medium text-green-600"},ue={key:1,class:"ml-2 font-medium text-yellow-600"},pe={class:"ml-2 font-medium"},ve={class:"ml-2 font-medium"},be={class:"grid grid-cols-3 gap-4"},ce={class:"medical-card"},ge={class:"grid grid-cols-1 md:grid-cols-2 gap-6"},ye={class:"mt-6"},fe={class:"space-y-3"},xe={class:"flex items-center"},_e={class:"flex items-center"},ke={class:"flex items-center"},Te={class:"medical-card"},he={class:"space-y-4"},Me={class:"flex items-start"},Ce={key:0,class:"ml-6 space-y-4 border-l-2 border-blue-200 pl-4"},Se={class:"grid grid-cols-2 gap-4"},Be={class:"flex items-center justify-between pt-6 border-t border-gray-200"},Ve={class:"flex space-x-3"},we=["disabled"],ze=["disabled"],De=P({__name:"ModelCreate",setup(Ue){const _=A(),w=L(),p=j(),z=W(),k=J(),b=c(!1),y=c([]),m=c(null),D=c([{id:"biobert",name:"BioBERT",description:"Biomedical domain pre-trained BERT"},{id:"clinicalbert",name:"ClinicalBERT",description:"Clinical notes pre-trained BERT"},{id:"scibert",name:"SciBERT",description:"Scientific literature pre-trained BERT"},{id:"bert-base",name:"BERT Base",description:"Standard BERT base model"}]),a=c({name:"",description:"",model_type:"bert",dataset_id:0,parameters:{base_model:"biobert",training_split:70,validation_split:20,test_split:10,hyperparameters:{learning_rate:"2e-5",batch_size:16,epochs:3,max_sequence_length:512},use_early_stopping:!0,use_class_weights:!1,enable_gradient_checkpointing:!1,enable_hyperparameter_optimization:!1,optimization_params:{n_trials:20,timeout:120}}}),U=(l,e)=>{const s={...e};return l!=="bert"&&delete s.base_model,l==="gemma2-2b"?{training_split:s.training_split,validation_split:s.validation_split,test_split:s.test_split,hyperparameters:{max_sequence_length:s.hyperparameters?.max_sequence_length||512}}:s},i=c({}),T=N(()=>a.value.name.trim()&&a.value.model_type&&a.value.dataset_id>0&&!Object.keys(i.value).length);M(()=>a.value.parameters?.training_split,l=>{l&&a.value.parameters&&(a.value.parameters.validation_split=Math.round((100-l)/2),a.value.parameters.test_split=100-l-a.value.parameters.validation_split)}),M(()=>a.value.dataset_id,l=>{l?m.value=y.value.find(e=>e.id===l)||null:m.value=null});const h=()=>{i.value={},a.value.name.trim()?a.value.name.length<3&&(i.value.name="Model name must be at least 3 characters"):i.value.name="Model name is required",a.value.model_type||(i.value.model_type="Model type is required"),a.value.model_type==="bert"&&!a.value.parameters?.base_model&&(i.value.base_model="Base model is required for BERT type"),!a.value.dataset_id||a.value.dataset_id===0?i.value.dataset_id="Training dataset is required":m.value&&!m.value.is_validated&&p.warning("Warning: Selected dataset is not validated. This may affect training quality."),a.value.parameters&&a.value.parameters.training_split+a.value.parameters.validation_split+a.value.parameters.test_split!==100&&(i.value.splits="Data splits must sum to 100%")},R=()=>{h()},q=l=>new Date(l).toLocaleDateString(),E=async()=>{if(h(),!T.value){p.error("Please fix the form errors before submitting");return}b.value=!0;try{const l={...a.value,parameters:U(a.value.model_type,a.value.parameters)},e=await z.createModel(l);p.success("Model created successfully!"),confirm("Model created successfully! Would you like to start training now?")?_.push(`/models/${e.id}/training`):_.push(`/models/${e.id}`)}catch(l){console.error("Failed to create model:",l),p.error("Failed to create model. Please try again.")}finally{b.value=!1}},F=async()=>{p.info("Draft saving functionality will be implemented soon")};return $(async()=>{try{await k.fetchDatasets(),y.value=k.datasets.filter(e=>e.total_samples>0);const l=w.query.dataset;if(l){const e=parseInt(l);e&&y.value.some(s=>s.id===e)&&(a.value.dataset_id=e,p.success("Dataset preselected from URL",{timeout:2e3}))}}catch(l){console.error("Failed to load datasets:",l),p.error("Failed to load datasets")}}),(l,e)=>(o(),n("div",X,[e[53]||(e[53]=t("div",{class:"mb-8"},[t("h1",{class:"text-3xl font-bold text-gray-900"},"Create AI Model"),t("p",{class:"mt-2 text-gray-600"},"Configure and train a new medical literature classification model")],-1)),t("form",{onSubmit:I(E,["prevent"]),class:"space-y-8"},[t("div",Z,[e[25]||(e[25]=t("div",{class:"medical-card-header"},[t("h2",{class:"text-xl font-semibold text-gray-900"},"Basic Configuration"),t("p",{class:"text-sm text-gray-600"},"Define the core model parameters")],-1)),t("div",K,[t("div",null,[e[19]||(e[19]=t("label",{for:"name",class:"block text-sm font-medium text-gray-700 mb-2"}," Model Name * ",-1)),r(t("input",{id:"name","onUpdate:modelValue":e[0]||(e[0]=s=>a.value.name=s),type:"text",required:"",class:f(["input-field",{"border-red-500":i.value.name}]),placeholder:"e.g., BioBERT Cardiology Classifier"},null,2),[[u,a.value.name]]),i.value.name?(o(),n("p",Q,d(i.value.name),1)):v("",!0)]),t("div",null,[e[21]||(e[21]=t("label",{for:"model_type",class:"block text-sm font-medium text-gray-700 mb-2"}," Model Type * ",-1)),r(t("select",{id:"model_type","onUpdate:modelValue":e[1]||(e[1]=s=>a.value.model_type=s),required:"",class:f(["input-field",{"border-red-500":i.value.model_type}])},[...e[20]||(e[20]=[H('<option value="" data-v-0df39703>Select model type</option><option value="bert" data-v-0df39703>BERT - Transformer-based model</option><option value="gemma2-2b" data-v-0df39703>Google Gemma 2B - Advanced generative model</option><option value="traditional" data-v-0df39703>Traditional ML - Classical algorithms</option><option value="hybrid" data-v-0df39703>Hybrid - Combined approach</option><option value="custom" data-v-0df39703>Custom - User-defined architecture</option>',6)])],2),[[g,a.value.model_type]]),i.value.model_type?(o(),n("p",Y,d(i.value.model_type),1)):v("",!0)]),a.value.model_type==="bert"?(o(),n("div",ee,[e[23]||(e[23]=t("label",{for:"base_model",class:"block text-sm font-medium text-gray-700 mb-2"}," Base Model * ",-1)),r(t("select",{id:"base_model","onUpdate:modelValue":e[2]||(e[2]=s=>a.value.parameters.base_model=s),required:"",class:f(["input-field",{"border-red-500":i.value.base_model}])},[e[22]||(e[22]=t("option",{value:""},"Select base model",-1)),(o(!0),n(C,null,S(D.value,s=>(o(),n("option",{key:s.id,value:s.id},d(s.name)+" - "+d(s.description),9,te))),128))],2),[[g,a.value.parameters.base_model]]),i.value.base_model?(o(),n("p",ae,d(i.value.base_model),1)):v("",!0)])):v("",!0)]),t("div",null,[e[24]||(e[24]=t("label",{for:"description",class:"block text-sm font-medium text-gray-700 mb-2"}," Description ",-1)),r(t("textarea",{id:"description","onUpdate:modelValue":e[3]||(e[3]=s=>a.value.description=s),rows:"3",class:"input-field",placeholder:"Describe the model's purpose, training objectives, and expected use cases..."},null,512),[[u,a.value.description]])])]),t("div",se,[e[36]||(e[36]=t("div",{class:"medical-card-header"},[t("h2",{class:"text-xl font-semibold text-gray-900"},"Training Dataset"),t("p",{class:"text-sm text-gray-600"},"Select the dataset for training your model")],-1)),t("div",le,[t("div",null,[e[27]||(e[27]=t("label",{for:"dataset",class:"block text-sm font-medium text-gray-700 mb-2"}," Training Dataset * ",-1)),r(t("select",{id:"dataset","onUpdate:modelValue":e[4]||(e[4]=s=>a.value.dataset_id=s),required:"",class:f(["input-field",{"border-red-500":i.value.dataset_id}]),onChange:R},[e[26]||(e[26]=t("option",{value:"0"},"Select training dataset",-1)),(o(!0),n(C,null,S(y.value,s=>(o(),n("option",{key:s.id,value:s.id},d(s.name)+" ("+d(s.total_samples)+" samples) ",9,ie))),128))],34),[[g,a.value.dataset_id]]),i.value.dataset_id?(o(),n("p",re,d(i.value.dataset_id),1)):v("",!0)]),m.value?(o(),n("div",oe,[e[32]||(e[32]=t("h4",{class:"font-medium text-gray-900 mb-2"},"Dataset Information",-1)),t("div",ne,[t("div",null,[e[28]||(e[28]=t("span",{class:"text-gray-600"},"Samples:",-1)),t("span",de,d(m.value.total_samples),1)]),t("div",null,[e[29]||(e[29]=t("span",{class:"text-gray-600"},"Status:",-1)),m.value.is_validated?(o(),n("span",me,"Validated")):(o(),n("span",ue,"Pending Validation"))]),t("div",null,[e[30]||(e[30]=t("span",{class:"text-gray-600"},"Domains:",-1)),t("span",pe,d(m.value.medical_domains?.length||0),1)]),t("div",null,[e[31]||(e[31]=t("span",{class:"text-gray-600"},"Created:",-1)),t("span",ve,d(q(m.value.uploaded_at)),1)])])])):v("",!0),t("div",be,[t("div",null,[e[33]||(e[33]=t("label",{for:"train_split",class:"block text-sm font-medium text-gray-700 mb-2"}," Training Split (%) ",-1)),r(t("input",{id:"train_split","onUpdate:modelValue":e[5]||(e[5]=s=>a.value.parameters.training_split=s),type:"number",min:"50",max:"90",class:"input-field"},null,512),[[u,a.value.parameters.training_split,void 0,{number:!0}]])]),t("div",null,[e[34]||(e[34]=t("label",{for:"val_split",class:"block text-sm font-medium text-gray-700 mb-2"}," Validation Split (%) ",-1)),r(t("input",{id:"val_split","onUpdate:modelValue":e[6]||(e[6]=s=>a.value.parameters.validation_split=s),type:"number",min:"5",max:"30",class:"input-field",readonly:""},null,512),[[u,a.value.parameters.validation_split,void 0,{number:!0}]])]),t("div",null,[e[35]||(e[35]=t("label",{for:"test_split",class:"block text-sm font-medium text-gray-700 mb-2"}," Test Split (%) ",-1)),r(t("input",{id:"test_split","onUpdate:modelValue":e[7]||(e[7]=s=>a.value.parameters.test_split=s),type:"number",min:"5",max:"30",class:"input-field",readonly:""},null,512),[[u,a.value.parameters.test_split,void 0,{number:!0}]])])])])]),t("div",ce,[e[48]||(e[48]=t("div",{class:"medical-card-header"},[t("h2",{class:"text-xl font-semibold text-gray-900"},"Training Parameters"),t("p",{class:"text-sm text-gray-600"},"Configure hyperparameters and training settings")],-1)),t("div",ge,[t("div",null,[e[38]||(e[38]=t("label",{for:"learning_rate",class:"block text-sm font-medium text-gray-700 mb-2"}," Learning Rate ",-1)),r(t("select",{id:"learning_rate","onUpdate:modelValue":e[8]||(e[8]=s=>a.value.parameters.hyperparameters.learning_rate=s),class:"input-field"},[...e[37]||(e[37]=[t("option",{value:"1e-5"},"1e-5 (Conservative)",-1),t("option",{value:"2e-5",selected:""},"2e-5 (Recommended)",-1),t("option",{value:"3e-5"},"3e-5 (Aggressive)",-1),t("option",{value:"5e-5"},"5e-5 (Very Aggressive)",-1)])],512),[[g,a.value.parameters.hyperparameters.learning_rate]])]),t("div",null,[e[40]||(e[40]=t("label",{for:"batch_size",class:"block text-sm font-medium text-gray-700 mb-2"}," Batch Size ",-1)),r(t("select",{id:"batch_size","onUpdate:modelValue":e[9]||(e[9]=s=>a.value.parameters.hyperparameters.batch_size=s),class:"input-field"},[...e[39]||(e[39]=[t("option",{value:"8"},"8 (Low Memory)",-1),t("option",{value:"16",selected:""},"16 (Recommended)",-1),t("option",{value:"32"},"32 (High Memory)",-1),t("option",{value:"64"},"64 (Very High Memory)",-1)])],512),[[g,a.value.parameters.hyperparameters.batch_size]])]),t("div",null,[e[41]||(e[41]=t("label",{for:"epochs",class:"block text-sm font-medium text-gray-700 mb-2"}," Training Epochs ",-1)),r(t("input",{id:"epochs","onUpdate:modelValue":e[10]||(e[10]=s=>a.value.parameters.hyperparameters.epochs=s),type:"number",min:"1",max:"50",class:"input-field"},null,512),[[u,a.value.parameters.hyperparameters.epochs,void 0,{number:!0}]])]),t("div",null,[e[43]||(e[43]=t("label",{for:"max_length",class:"block text-sm font-medium text-gray-700 mb-2"}," Max Sequence Length ",-1)),r(t("select",{id:"max_length","onUpdate:modelValue":e[11]||(e[11]=s=>a.value.parameters.hyperparameters.max_sequence_length=s),class:"input-field"},[...e[42]||(e[42]=[t("option",{value:"128"},"128 tokens (Fast)",-1),t("option",{value:"256"},"256 tokens (Balanced)",-1),t("option",{value:"512",selected:""},"512 tokens (Recommended)",-1),t("option",{value:"1024"},"1024 tokens (Slow)",-1)])],512),[[g,a.value.parameters.hyperparameters.max_sequence_length]])])]),t("div",ye,[e[47]||(e[47]=t("h4",{class:"text-sm font-medium text-gray-900 mb-3"},"Advanced Options",-1)),t("div",fe,[t("label",xe,[r(t("input",{"onUpdate:modelValue":e[12]||(e[12]=s=>a.value.parameters.use_early_stopping=s),type:"checkbox",class:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"},null,512),[[x,a.value.parameters.use_early_stopping]]),e[44]||(e[44]=t("span",{class:"ml-2 text-sm text-gray-700"}," Enable early stopping (stop training when validation loss plateaus) ",-1))]),t("label",_e,[r(t("input",{"onUpdate:modelValue":e[13]||(e[13]=s=>a.value.parameters.use_class_weights=s),type:"checkbox",class:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"},null,512),[[x,a.value.parameters.use_class_weights]]),e[45]||(e[45]=t("span",{class:"ml-2 text-sm text-gray-700"}," Use class weights to handle imbalanced datasets ",-1))]),t("label",ke,[r(t("input",{"onUpdate:modelValue":e[14]||(e[14]=s=>a.value.parameters.enable_gradient_checkpointing=s),type:"checkbox",class:"rounded border-gray-300 text-blue-600 focus:ring-blue-500"},null,512),[[x,a.value.parameters.enable_gradient_checkpointing]]),e[46]||(e[46]=t("span",{class:"ml-2 text-sm text-gray-700"}," Enable gradient checkpointing (reduces memory usage) ",-1))])])])]),t("div",Te,[e[52]||(e[52]=t("div",{class:"medical-card-header"},[t("h2",{class:"text-xl font-semibold text-gray-900"},"Hyperparameter Optimization"),t("p",{class:"text-sm text-gray-600"},"Automatically find the best hyperparameters")],-1)),t("div",he,[t("label",Me,[r(t("input",{"onUpdate:modelValue":e[15]||(e[15]=s=>a.value.parameters.enable_hyperparameter_optimization=s),type:"checkbox",class:"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mt-1"},null,512),[[x,a.value.parameters.enable_hyperparameter_optimization]]),e[49]||(e[49]=t("div",{class:"ml-2"},[t("span",{class:"text-sm font-medium text-gray-700"}," Enable Hyperparameter Optimization "),t("p",{class:"text-xs text-gray-500 mt-1"}," Use Optuna to automatically search for optimal hyperparameters. This will override manual settings above. ")],-1))]),a.value.parameters.enable_hyperparameter_optimization?(o(),n("div",Ce,[t("div",Se,[t("div",null,[e[50]||(e[50]=t("label",{for:"optimization_trials",class:"block text-sm font-medium text-gray-700 mb-2"}," Number of Trials ",-1)),r(t("input",{id:"optimization_trials","onUpdate:modelValue":e[16]||(e[16]=s=>a.value.parameters.optimization_params.n_trials=s),type:"number",min:"5",max:"100",class:"input-field"},null,512),[[u,a.value.parameters.optimization_params.n_trials,void 0,{number:!0}]])]),t("div",null,[e[51]||(e[51]=t("label",{for:"optimization_timeout",class:"block text-sm font-medium text-gray-700 mb-2"}," Timeout (minutes) ",-1)),r(t("input",{id:"optimization_timeout","onUpdate:modelValue":e[17]||(e[17]=s=>a.value.parameters.optimization_params.timeout=s),type:"number",min:"30",max:"1440",class:"input-field"},null,512),[[u,a.value.parameters.optimization_params.timeout,void 0,{number:!0}]])])])])):v("",!0)])]),t("div",Be,[t("button",{type:"button",onClick:e[18]||(e[18]=s=>l.$router.push("/models")),class:"btn-secondary"}," Cancel "),t("div",Ve,[t("button",{type:"button",onClick:F,class:"btn-outline",disabled:b.value||!a.value.name}," Save Draft ",8,we),t("button",{type:"submit",class:"btn-primary",disabled:b.value||!T.value},[b.value?(o(),B(V,{key:0,name:"clock",class:"w-4 h-4 mr-2 animate-spin"})):(o(),B(V,{key:1,name:"brain",class:"w-4 h-4 mr-2"})),O(" "+d(b.value?"Creating...":"Create Model"),1)],8,ze)])])],32)]))}}),Le=G(De,[["__scopeId","data-v-0df39703"]]);export{Le as default};
//# sourceMappingURL=ModelCreate-BHDvzV6S.js.map
