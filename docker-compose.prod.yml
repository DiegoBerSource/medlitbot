version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: medlitbot_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /mnt/medlitbot-data/postgres:/var/lib/postgresql/data
    networks:
      - medlitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medlitbot_redis
    volumes:
      - /mnt/medlitbot-data/redis:/data
    networks:
      - medlitbot-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medlitbot_web
    environment:
      - DEBUG=False
    env_file:
      - /mnt/medlitbot-data/.env
    volumes:
      - /mnt/medlitbot-data/media:/app/media
      - /mnt/medlitbot-data/staticfiles:/app/staticfiles
      - /mnt/medlitbot-data/logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medlitbot-network
    restart: unless-stopped
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn medlitbot_project.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 120
      "

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medlitbot_celery
    env_file:
      - /mnt/medlitbot-data/.env
    volumes:
      - /mnt/medlitbot-data/media:/app/media
      - /mnt/medlitbot-data/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medlitbot-network
    restart: unless-stopped
    command: celery -A medlitbot_project worker -l info --concurrency=1

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile  
    container_name: medlitbot_celery_beat
    env_file:
      - /mnt/medlitbot-data/.env
    volumes:
      - /mnt/medlitbot-data/media:/app/media
      - /mnt/medlitbot-data/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - medlitbot-network
    restart: unless-stopped
    command: celery -A medlitbot_project beat -l info

  nginx:
    image: nginx:alpine
    container_name: medlitbot_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /mnt/medlitbot-data/staticfiles:/usr/share/nginx/html/static:ro
      - /mnt/medlitbot-data/media:/usr/share/nginx/html/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    networks:
      - medlitbot-network
    restart: unless-stopped

networks:
  medlitbot-network:
    driver: bridge
